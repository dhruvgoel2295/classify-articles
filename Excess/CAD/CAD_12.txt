Computer-Aided Design 44 (2012) 858–874

Contents lists available at SciVerse ScienceDirect

Computer-Aided Design
journal homepage: www.elsevier.com/locate/cad

A virtual inspection framework for precision manufacturing of
aerofoil components
Jonathan E. Makem a , Hengan Ou b,∗ , Cecil G. Armstrong a
a

School of Mechanical and Aerospace Engineering, Queen’s University Belfast, Belfast, BT9 5AH, UK

b

Department of Mechanical, Materials and Manufacturing Engineering, University of Nottingham, Nottingham, NG7 2RD, UK

article

info

Article history:
Received 17 August 2011
Accepted 7 April 2012
Keywords:
Virtual inspection
Finite element modelling
Coordinate measurement
Hot-forging
Aeroengine blades

abstract
The finite element method plays an extremely important role in forging process design as it provides
a valid means to quantify forging errors and thereby govern die shape modification to improve the
dimensional accuracy of the component. However, this dependency on process simulation could raise
significant problems and present a major drawback if the finite element simulation results were
inaccurate. This paper presents a novel approach to assess the dimensional accuracy and shape quality
of aeroengine blades formed from finite element hot-forging simulation. The proposed virtual inspection
system uses conventional algorithms adopted by modern coordinate measurement processes as well as
the latest free-form surface evaluation techniques to provide a robust framework for virtual forging error
assessment. Established techniques for the physical registration of real components have been adapted to
localise virtual models in relation to a nominal design model. Blades are then automatically analysed using
a series of intelligent routines to generate measurement data and compute dimensional errors. The results
of a comparison study indicate that the virtual inspection results and actual coordinate measurement data
are highly comparable and the procedures for registration and virtual inspection are computationally
efficient, validating the approach as an effective and accurate means to quantify forging error in a virtual
environment. Consequently, this provides adequate justification for the implementation of the virtual
inspection system in the virtual process design, modelling and validation of forged aeroengine blades
in industry.
© 2012 Elsevier Ltd. Open access under CC BY license.

1. Introduction
As a result of the increasing demands to maximise the performance and quality of manufactured components within the
aerospace industry, parts are inspected to ensure their features
adhere to the geometrical and dimensional specifications. In particular, the inspection of complex parts comprising free-form
geometry, such as forged aeroengine compressor blades, is becoming ever-more important due to the requirements for higher precision and efficiency. The premise behind most inspection processes
involves determining the extent to which a component deviates
from a given set of specifications by comparing its actual shape to
a nominal model. For quality assurance purposes, high precision dimensional measurement techniques are employed to evaluate the
dimensional tolerance of forged aerofoil blades. Generally, these
inspection processes may be categorised into two main groups,

∗

Corresponding author. Tel.: +44 0 115 8467391.
E-mail addresses: jmakem01@qub.ac.uk (J.E. Makem), h.ou@nottingham.ac.uk
(H. Ou), c.armstrong@qub.ac.uk (C.G. Armstrong).
0010-4485 © 2012 Elsevier Ltd. Open access under CC BY license.
doi:10.1016/j.cad.2012.04.002

utilising either contact or non-contact measurement. The latter acquires surface information without physically contacting the part
using sensing devices such as laser/optical scanners, X-rays and
CT scans [1]. The main limitation with this approach is that the
measurement data may be affected by factors such as part colour,
surface roughness, viewpoint and lighting [2]. Conversely, the contact inspection process of coordinate measurement is an effective
measurement technique, providing both high accuracy and repeatability. The process employs a computer controlled coordinate
measurement machine (CMM) to inspect the part automatically by
moving a tactile probe along the workpiece surface, to measure the
coordinates of individual contact points. In terms of forged blade
inspection, CMM is by far the most commonly used tool owing to
its ease of use, automation and measurement precision.
Compressor blades for aeroengine applications are normally
manufactured using the closed die hot-forging process. Forging of
the work material at elevated temperatures creates distortion due
to the thermal contraction and spring-back, and shape errors due
to the elastic deflection of the die and forging press. In industry,
due to the complexity of the hot-forging process, forging process
design is often dependent upon forging trials requiring prolonged
lead times and increased costs. This iterative process involves

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

modifying the die shape by a fraction of the measured forging error
until the blade dimensions are within the specified tolerance and
the aerofoil errors are sufficiently reduced. Therefore, dimensional
inspection forms an integral part of this process by providing the
necessary feedback to control the entire design and manufacturing
process and achieve the desired results.
In blade forging design and manufacturing, finite element
analysis has been widely used to simulate the material flow,
stress/strain-rate distribution, thermal behaviour and forming
load/energy requirements in blade forging [3,4]. By removing the
need to conduct expensive forging trials, finite element simulation
may also be used as a design tool to quantify forging errors and
thereby govern die shape modification for improved dimensional
accuracy [5]. However, in order to assess the accuracy of the forging
errors on blade models generated from a forging simulation, it
is necessary to verify the dimensional and shape accuracies via
comparison to actual measurement data. Little research has been
reported in this area.
The aim of this research is to develop a generic virtual
inspection system to assess the dimensional accuracy of forged
aerofoil blades in a virtual environment thereby allowing a
fast, automated correlation between virtual forging design and
actual forging production. Similar to the conventional procedure
for measuring a physical blade, the inspection process for the
virtual blade model comprises three main stages: part localisation,
aerofoil section inspection and parameter analysis. Both the
classical 3–2–1 approach [2] and the iterative closest point (ICP)
method [1] are implemented in part localisation. Aerofoil profile
tolerances, aerofoil thickness and angular deviations from the
nominal shape at three sections along the blade are evaluated by
the aerofoil section inspection and parameter analysis modules. As
a means of validation, a case study is presented to compare actual
measurement data with the virtual inspection results. The results
indicate that although the 3–2–1 approach is computationally
efficient, the ICP method provides a much better solution to the
part localisation of the blade model. A statistical analysis revealed
a strong correlation between the virtual inspection results and the
coordinate measurement data.
The remainder of this paper is organised as follows: Section 2
provides a comprehensive review of recent research in the area
of dimensional inspection with specific emphasis on aeroengine
blades. Section 3 describes the main aspects of the virtual
inspection system. A more detailed description of the relevant
theories and methodologies for part localisation and blade
inspection is reported in Section 4. An overview of the inspection
systems software framework is provided in Section 5. The results
of a case study detailing a comparison between virtual inspection
data and actual measurement data are presented and discussed in
Section 6. Concluding remarks are reported in Section 7.
2. Literature review
A critique of the latest work and technological developments in
the area of aeroengine blade inspection is provided in this section.
Relevant topics such as localisation part registration, methods and
procedures for measurement data acquisition, as well as tolerance
evaluation algorithms and techniques for quantifying geometrical
and dimensional discrepancies are discussed in detail.
2.1. Part localisation techniques
The process of part localisation, also known as registration,
mathematically locates the part prior to inspection by determining
a rigid body 3D coordinate transformation between the design
coordinate system (DCS) and the measurement coordinate system
(MCS). Traditionally, the design coordinate system is located

859

using the six point principle or 3–2–1 approach [1,2,6]. For
parts with regular features such as planar surfaces or cylindrical
features, coordinate systems may be easily established. However,
as aerofoil blades are largely composed of free-form surfaces,
it is difficult to locate enough planar surfaces to act as datum
planes [7]. Consequently, various localisation techniques have
been developed for free-form surface inspection.
Based on a concept of finding the closest point set between
two free-form surfaces, the iterative closest point (ICP) approach
may be used to establish a 3D transformation matrix by aligning
the two surfaces through an iterative process [8]. Huang et al.
described an ICP approach which minimises the sum of the
squared distances between the measured points and their closest
points (corresponding points) on the nominal surface, also
known a priori [9]. A transformation matrix generated by the
approach comprises six parameters which define the position and
orientation of the coordinate frame. Using the pseudo-inverse
method, the sum of the squared distances may be minimised
iteratively between the respective point sets. Menq et al. [10]
proposed an optimal match algorithm to determine a rigid body
transformation of one surface related to another, also based on
least-squares minimisation. Ainsworth et al. [11,12] presented
a localisation approach which required an initial manual input
to gain an approximate alignment of the part. Subsequently,
an ICP algorithm was applied for more accurate registration.
Lai and Chen [13]proposed an algorithm for the registration of
irregular shapes using the coordinate measurement process. The
part localisation process comprised of a rough and fine alignment
procedure to match the part coordinate of the CMM with the model
coordinate of the CAD model.
The main drawback of the aforementioned localisation techniques when applied to the registration of aerofoil blades is that
they provide only an approximate solution to a set of measured
data. The solution varies when the number or location of points
varies and therefore does not guarantee that the design coordinate
system can be regenerated for inspection [14]. Also, the ICP approach only ensures registration when the measurement surface
and nominal model are close enough in both 3D orientation and
position, necessitating initial manual alignment in some cases [1].
Conversely, the process of free-form surface localisation with reference to design datums locates the measured surface data with
respect to the design model using known datum references instead
of the free-form surface itself. The main advantage of this approach
is that it does not require the specification of the closest points on
a model, thereby providing a simpler yet more robust registration
procedure which can be easily implemented [12,14].
Datum reference frames may also be defined by using elementary datum reference features such as planes and cylinders [14].
Coordinate systems may be established using the normal of a planar datum or the axis of a cylindrical surface. In terms of the measured part, datums are constructed by fitting the measurement
points of a feature according to a least squares principle [1]. Li
and Gu described an approach for localisation of sculptured surfaces with datums using the concept of Datum Direction Frame
(DDF) [7]. The localisation process proposed by Hsu et al. for aerofoil blade inspection used an iterative algorithm incorporating
CMM measurement and a coordinate upgrading procedure [6,14].
However, the process is prone to error if local deformations are
present [15]. For example, if an aberration in the surface occurs at
a datum point, the coordinate system will be incorrectly aligned.
2.2. Blade measurement and evaluation
In general, the conventional methodology for part validation of
turbine blades using the coordinate measurement process involves
evaluating the dimensional accuracy of the component along

860

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

Fig. 1. Datum point positions for locating the design coordinate system on the nominal model.

several aerofoil cross sections. Hsu et al. [2] described a blade
section inspection approach where three cross sectional profiles
were measured at the base, mid and tip sections perpendicular
to the stacking axis. The CMM employed a contour measurement
mode, whereby each blade profile was measured at a constant
height (z coordinate). Cardew-Hall et al. [15] proposed a similar
process for section inspection, whereby planes perpendicular to
the stacking axis cut the aerofoil to generate spline profiles. The
precision inspection system developed by Pahk and Ahn obtained
scanning path measurement coordinates by using coordinate data
from the CAD nominal model [16].
Once the blade has been successfully localised, dimensional
errors will still exist as a result of curvature change, blade
thickness and twist [2]. As the section curvature and twist becomes
greater along the length of the aerofoil, the discrepancy between
the measurement data and the nominal sectional data becomes
more exaggerated. Consequently, additional alignment procedures
are required to compensate for this residual misalignment
error [16]. By minimising the residual misalignment, the sectional
measurement data may then be transformed and a new set
of corresponding points are generated on the nominal section.
The iterative process of transforming the measurement data and
calculating the curve corresponding points continues until the
convergence of computation.
The geometric design parameters of an aerofoil blade may be
categorised into three groups: blade orientation and displacement,
blade dimensions and profile tolerance [2]. The blade dimensions
that are commonly inspected for comparative analysis include
the chord length, the length of the leading/trailing edge to the
stacking axis and the aerofoil thickness at the leading edge, centre
and trailing edge, respectively. Blade orientation and displacement
indicate the deviation of the position and orientation of the overall
blade. Blade orientation is defined in terms of the orientation
angle. Blade displacement relates to the deviation between the
actual and basic stacking points, where the stacking points are the
construction points about which each section is defined.
Generally, the profile tolerance is used to identify the form
error of an individual region on the blade section, including the
pressure and suction surfaces. A tolerance zone is usually defined
as the space between the offset boundaries of the nominal profile
and thereby sets a limit for the variation of the form error.
Often, the profile tolerance is quoted as a single value for each
section and may be defined as the sum of the maximum errors
on both sides of the nominal curve. Pahk and Ahn [16] proposed
a rigorous approach for profile tolerance evaluation based on
the Tschebyscheff norm between the measurement data and the
corresponding closest points data.
Statistical based methods may be used as a means of tolerance
verification, whereby the standard deviation of the manufactured
surface reflects how far the measured surface deviates from the
nominal model. According to Huang and Gu [17], the deviation of

a manufactured surface may be separated into deterministic error,
d and random error, ε components. As the deterministic error is
virtually removed after localisation, the deviation of the surface
is dominated by the random component, which obeys a normal
distribution. As the actual deviation value is unknown, it can be
estimated from the sample data. Several example cases to test
the approach were presented by both Huang and Gu [17] and Li
and Gu [7]. In each case, after initial localisation of the part to
the DCS using the DDF’s, either the maximum deviation of the
free-form surface was out of tolerance or the standard deviation
was above the acceptable limit. However, after performing further
localisation using an optimal match algorithm, based on an ICP
approach, the aforementioned values were successfully reduced to
within the required tolerance range.
3. Virtual inspection system
This section provides an overview of the virtual inspection
system. The first stage of virtual inspection involves registering
or localising the part in relation to a nominal model. The
system provides a conventional registration procedure using nonmarginal datum points and datum features to localise the part
and an alternative localisation algorithm for registering free-form
surfaces based on least squares minimisation. After localisation,
measurement data is generated and various blade dimensions and
geometrical parameters are evaluated in the second and third
phases of the process.
3.1. Model localisation
The two forms of localisation offered by the system are
the 3–2–1 approach and ICP localisation. The traditional 3–2–1
approach may be employed to establish the blades coordinate
system, as shown in Fig. 1. However, not all of the datum points are
defined by basic datum features. In particular, the primary datum
plane is determined by three points on the free-form concave
surface of the blade, including P1 and P2 on the root section and P3
on the tip section. The secondary datum plane is constructed using
the central axis of cylindrical features at each end of the blade,
defined by P4 and P5 . Finally, the tertiary datum plane, orthogonal
to both previous datum planes is determined using the last datum
point, P6 , located on the root block. The normal vectors of the
aforementioned datum planes, shown in Fig. 2, are defined by
Eqs. (1)–(3).
P = (P3 − P2 ) × (P3 − P1 )

(1)

S = (P5 − P4 ) × P

(2)

T = S × P.

(3)

On the nominal model the exact coordinates of the datum
points are known. A series of iterative techniques which are

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

861

Fig. 2. Respective datum planes of nominal and forged components.

(a) Nominal model (point cloud in yellow).

(b) Forged model (point cloud in purple).

(c) Forged model (green) localised in relation
to nominal model (yellow).

Fig. 3. ICP localisation of a forged aeroengine blade model. (For interpretation of the references to colour in this figure legend, the reader is referred to the web version of
this article.)

described in Section 4 are used to estimate the location of the
equivalent datum points on the forged model. The datum planes
P ′ , S ′ and T ′ on the forged model, shown in Fig. 2, are established
using Eqs. (1)–(3).
After establishing the coordinates of the datum points and
the datum plane normal vectors on both the nominal and
forged models, a registration approach similar to that employed
by the coordinate measurement technique adopted by Hsu
et al. [2] is implemented. This approach uses an iterative algorithm
incorporating virtual coordinate measurement and a coordinate
upgrading procedure to align the nominal datum reference frame
known as the design coordinate system (DCS) with the datum
reference frame of the forged model, known as the measurement
coordinate system (MCS) to within a given tolerance. Both
reference frames are shown in Fig. 2.
The ICP approach employed by the inspection system uses a
nearest neighbour algorithm based on a binary search tree to locate
the corresponding points on the forged model for each point on
the nominal model, as shown in Fig. 3(a) and (b), respectively. A
transformation matrix is generated for the measured point cloud
using a least squares minimisation approach described in Section 4.
The process of locating corresponding points and generating a

transformation matrix between the respective point sets continues
until a convergence criterion, based on the change in residual error
between successive iterations, is satisfied. At this point the forged
model is successfully registered in relation to the nominal model,
as shown in Fig. 3(c).
3.2. Measurement data generation and evaluation of geometric
parameters
Measurement data is generated at three locations on the
concave and convex surfaces of the virtual blade model by
intersecting the finite element mesh with a plane orthogonal to the
longitudinal axis of the blade at the appropriate position. Sectional
profiles are generated at the root, mid and tip positions on both
surfaces of the blade. Fig. 4 shows measurement profiles on the
concave surface of a blade model.
The geometric parameters assessed are aerofoil section thickness, angular displacement of the mid and tip section also known
as ‘‘twist’’ and vertical displacement of the mid inspection section
also referred to as ‘‘bow’’. These parameters are evaluated at reference positions known as K points that are interpolated from the
nominal model. A total of six K points are defined for each aerofoil
section, as shown in Fig. 5.

862

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

Table 1
Description of dimensional errors.
Error

Description

Calculation

Thickness

δt = |KCC − KCV | (1)
δ1 = δt′ − δt (2)

Twist

δ2 = cos

Bow

′
δ3 = K3y
− K3y (4)



Fig. 4. Location of aerofoil measurement sections.

Following industrial CMM practice, the section thickness, δt is
defined as the Euclidean distance between opposing K points on
the concave (CC ) and convex (CV ) blade surfaces. Overall, section
thickness is measured between three sets of K points located
at the leading edge, middle and trailing edge positions for each
section. Therefore for each measured value of section thickness, the
thickness error, δ1 may be subsequently obtained as the difference
between the actual thickness measurement, δt′ and the respective
nominal thickness, δt . The angular displacement at the mid and
tip sections, δ2 , also known as twist error, is quantified as the

(a) Concave surface.

−1


′⃗ ′
⃗
  K1 K5·K1 K5  
 ⃗   ′⃗ ′ 
K1 K5  K1 K5 

(3)

angular variation from the nominal when measured at K1 and K5 .
Finally, the vertical displacement of the mid section, otherwise
known as bow error, δ3 , is defined as the vertical deviation from the
nominal when measured at K3 . The bow error may be calculated
by the difference between y coordinate of K3 on the nominal
and measured profiles, respectively. Table 1 describes how the
geometric parameters are assessed.
The total deviation between the measured profile and the
nominal curve, known as form or profile error is evaluated
using a least squares based approach described in Section 4.
Similar approaches have been reported by Pahk and Ahn [16] and
Hsu et al. [2], both of which employ the iterative closest point
technique, whereby the corresponding points were generated
using the Tschebyscheff norm and the Powell method, respectively.
The measurement data positioning algorithm is reported in
Section 4.3. Overall, six profiles are evaluated, comprising the
concave and convex profile of each blade section. The form error
is then calculated as the vertical deviation between the respective
profiles. The form error may be represented graphically as a plot
displaying the error as the deviation from the nominal profile, as
shown in Fig. 6.
Form tolerances are often represented by offset zones, as
depicted in Fig. 6. These zones are created by offsetting the nominal

(b) Convex surface.
Fig. 5. K point positions on concave and convex surfaces.

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

863

Fig. 6. A plot displaying the form error of a typical concave profile.

Fig. 7. Datum points for initial coordinate system.

profile of a part by an amount equal to the tolerance on either side
of the nominal. In this case, offsets are obtained for the maximum
material condition (MMC ) and the least material condition (LMC ).
The tolerance zone is equal to the difference between these two
zones and generates an envelope within which the boundary of
the part must lie [18]. Thus, the profile tolerance, t comprises
the sum of two intermediate tolerances, t + and t − . Hence at a
given point on the nominal profile PN , the intermediate tolerances
represent the amount of tolerance allowed in the positive and
negative directions of a given unit vector Vˆ (usually in y direction).
Therefore, a surface conforms to a profile tolerance if each point
on the measured profile, PS lies within the intermediate tolerances
disposed about some corresponding point PN on the nominal
profile. This conformance criterion may be represented using
PS = PN + Vˆ u
−

(4)
+

where −t
≤ u ≤ t . In the example shown in Fig. 6, this
condition is satisfied as the error does not fall outside the offset
zone.
4. Theoretical formulation and methodology
A mathematical description of the methods and computational
procedures for part localisation, measurement data acquisition and
blade parameters analysis are reported in detail in this section.
4.1. 3–2–1 registration algorithm
To initiate localisation, datum points were firstly identified on
the blade formed from the finite element forging simulation. As
the initial position of the blade was in close proximity to the
nominal coordinate system due to constraints applied in the FE
simulation,
transformation process was required.
 no preliminary

Consider X ′ , Y ′ , Z ′ as the measurement coordinate system and
(X , Y , Z ) as the design coordinate system. Consequently, P1 –P6
represent the nominal datum points and P1′ –P6′ represent their
counterparts in the MCS. Firstly, an initial measurement of the

three datum points on the aerofoil surface, P1′ , P2′ and P3′ are
made using a series of measurement vectors known as ‘‘back-off
directions’’. Each measurement vector and corresponding target
point is represented in the following measurement matrix.
V = [xyzijk]T

(5)

where x, y and z represent the coordinate values of the target point
and i, j and k represent the components of the vector which are
aligned with the Y axis for the measurement of P1′ , P2′ and P3′ and
the z axis for P6′ . Each measurement point is calculated by determining the intersection point between the measurement vector
passing through the target point and the facet it intersects on the
mesh of the forged blade. Fig. 7 displays the initial measurement
process. The normal of the primary datum plane, P ′ is defined using Eq. (1). For subsequent iterations of the 3–2–1 method, the
measurement vector is then approximated as the normal of the
closest facet to each target. The actual coordinate measurement
process follows the same procedure. After an initial registration of
the blade, because the free-form surface is irregular it is necessary
to obtain a more accurate indication of the measurement vector.
Consequently, a local calculation of the surface normal is made by
measuring three points around the target point.
Subsequently, after gaining an initial estimate of the three
primary datum points, using the rules of orthogonality and
sequence for datum frame construction [6], the secondary datum,
perpendicular to the primary datum, is established next using
the cylindrical datum reference features at the tip pip and root
pip of the forging, Fig. 8(a). Thus, in both the experimental CMM
measurements and in the virtual inspection procedure outlined
here, the known cylindrical form of the root and tip pips is used
to localise and orient the aerofoil surface.
It should be noted that the axes of these cylindrical reference
features are not designed to be co-linear. However, by locating a
point on the axis of each cylindrical feature, it is possible to define
a line (or direction vector) on the secondary datum plane. The
normal of the secondary datum plane can be determined according
to Eq. (2). Each secondary datum point is determined by fitting

864

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

Fig. 8. Cylindrical point clouds submitted for least squares calculation. (Note that the root and tip pips are not co-axial.)

the nodal coordinates on the feature surface according to a least
squares principle.
As shown in Fig. 8(b) for a cylinder defined by a point on its
axis X0 = (x0 , y0 , z0 ), a vector along its axis a = (a, b, c ) and
radius r, an initial estimate of these parameters may be obtained by
minimising the distance function between the cylinder to m points
Xi = (xi , yi , zi ) (m ≥ 5), i.e.
di = ri − r

(6)

where:



u2i

ri = 

a2

2 0.5
i
2 0.5

+v +w
2
i

+

b2

+c



(7)



with
ui = c (yi − y0 ) − b (zi − z0 )
vi = a (zi − z0 ) − c (xi − x0 )
wi = b (xi − x0 ) − a (yi − y0 )

(8)

where ri is the distance of the ith point to the cylinder axis and
(Xi − X0 ) × a = (ui , vi , wi ) is the cross product of (Xi − X0 ) with
a. By rotating and translating the data at the start of each iteration
so that the trial best fit cylinder had a vertical axis passing through
the origin [19], it was possible to define di as a function of five
parameters x0 , y0 , a, b and r. To minimise the sum of the squared
distances, the objective function may be linearised in the form as
given in the following equation.
di = (ri − r ) + (xi − x0 )

∂ di
∂ di
+ (yi − y0 )
∂ x0
∂ y0

+ (ai − a)

∂ di
∂ di
∂ di
+ (bi − b)
+ (ri − r )
.
∂a
∂b
∂r

(9)

With m points collected from either the tip or root pip cylinders,
the least squares system may be obtained in the following form
JP = −d

(10)

where J is the Jacobian matrix from the partial derivatives of
Eq. (6) with respect to the five parameters given by

∂ di
∂ x0
∂ di
∂ y0
∂ di
∂a
∂ di
∂b
∂ di
∂r

xi

=−
=−
=−
=−

ri
yi

ri
xi z i

(11)

ri
yi zi
ri

= −1.

The Jacobian matrix may be obtained by
 ∂ d1 ∂ d1 ∂ d1 ∂ d1 ∂ d1 

 ∂ x0

 ∂ d2


J =  ∂ x0
 .
 ..

 ∂d
n
∂ x0

∂ y0
∂ d2
∂ y0
..
.
∂ dn
∂ y0

∂a
∂ d2
∂a
..
.
∂ dn
∂a

∂b
∂ d2
∂b
..
.
∂ dn
∂b

∂ r0 

∂ d2 

∂ r0 

.. 
. 

∂ dn 
∂ r0

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

 −x1

−y1

−x1 z1

−y1 z1

 r1
 −x2


r1
−y2

r1
−x2 z2

r1
−y2 z2

..
.
−xn

r2

..
.
−yn

r2

r2

−xn zn

−yn zn

rn

rn

rn

rn


=




r2

..
.

..
.


−1


−1

.
.. 
. 

−1

Xm = (xm , ym , zm ) is an arbitrary point on the surface of the blade,
then the new position after the above transformation is applied can
be expressed in matrix form as:
(12)



py0

pa

pb

pr

T



···

di

···

dn

T

(13)

.

(15)

X1 = R (θ, α) Xm

and the distance error vector d is
d = d1

Xm′ = Xm + T1
′

The vector of corrections to the cylinder parameters P is be
given by
P = p x0

865

(14)

Thus, given initial estimates of the axis point, axis direction
and radius, a Gauss–Newton strategy was implemented to find the
solution for best fit of the tip and root pip cylinders. The detailed
iteration procedure is given in [19] with the following main steps:
(i) translate the point X0 = (x0 , y0 , z0 ) to the centre of the origin;
(ii) transform the directional vector a = (a, b, c ) by rotation in
line with the z axis; (iii) calculate both the left and right hand sides
of the least squares system, Eq. (10); (iv) solve the least squares
system using the Gauss–Newton method until the convergence
criterion is met. As the FE simulation of the forging process ensures
close proximity of the forged blade to the nominal coordinate
system, the Gauss–Newton method was found to be effective in
computing iterations.
However, in order to fit the nodal coordinates, it is necessary to
identify the nodes that are situated on the surface of the cylindrical
pips. Thus, a shape recognition algorithm which uses the least
squares cylinder approach is employed for this purpose. To reduce
processing time and simplify the search for nodes which belong to
the candidate shape a 2D boundary is defined in the approximate
location of the tip pip and subsequently, a second boundary is
defined for the root pip. For each exposed element face within
the boundary at least ten of the closest nodes are located and
fitted to the candidate cylinder. If the least squares algorithm
does not converge or the calculated radius exceeds the nominal
radius tolerance the node set is not included in the candidate
point cloud. This process continues until all exposed elements
within each boundary have been evaluated. After identifying the
respective point clouds each data set is submitted to the least
squares calculation which yields the coordinates of the points
P4′ and P5′ on the respective cylinder axes. An example of the
cylindrical point clouds generated from the searching algorithm is
shown in Fig. 8(a).
According to the sequence rule in datum setting, the first
stage of the localisation involves aligning the components primary
datum plane with that of the nominal. This may be achieved by
aligning P with P ′ , the direction cosine of the primary datum in
the DCS defined in Fig. 1. All rotations and translations involved
in the localisation process are performed using an approach for
transformation about an arbitrary plane in 3-dimensional space.
This first transformation to align the primary datum plane shown
in Fig. 2 is composed of a translation and two rotations in sequence.
After applying an initial translation to the blade to align P1′ with
its counterpart on the nominal, the component is rotated by an
angle θ , about the axis defined by the cross product of P1′⃗P2′ and
P1⃗P2 . The final rotation to align P with P ′ is applied around the
axis defined by P1⃗P2 . In this instance, the angle of rotation, α , is
defined as the angle between the primary datum plane normals
which may be calculated as the angle between P ′ and P. Thus, if

(16)

where Xm is the initial position of the point on the unregistered
part, Xm′ is the position of the point after the translation, T1 is
the initial translation to align P1′ with P1 and R (θ, α) is rotational
matrix for angles θ and α about their respective axes. The second
phase of the localisation process involves the alignment of the
blades secondary datum plane with that of the nominal. The
plane is aligned by rotation about an axis defined by the primary
datum normal vector at the point of intersection between the two
secondary datum planes, assuming they are not parallel, as shown
in Fig. 2. The angle of rotation, β , is defined as the angle between S
and S ′ . Subsequently, after the second alignment the new position
of the measurement points is defined by:
X2 = R (β) X1 = R (β) R (θ, α) Xm′ .

(17)

The final stage to align the tertiary datum planes involves
a single translation between the two coordinate frames. The
translation values are found by implementing an algorithm to find
the intersection point of a line projected in the direction T from
the nominal P6 point with an element face on the root block of the
blade. On applying the final translation, the final position of the
measurement points becomes:
X3 = X2 + T2 = R (β) R (θ, α) Xm′ + T2

(18)

where T2 = tp , ts , tt represents translational values in the
primary, secondary and tertiary planes, respectively. After the
initial registration of the component, the localisation process is
repeated until the discrepancy between the datum points on the
blade and the corresponding points on the nominal are within the
specified tolerance.





4.2. Iterative Closest Point (ICP) localisation
The most important and computationally demanding step of
an ICP algorithm involves finding the corresponding points on
the reference surface. The previously mentioned ICP registration
methods [2,10] used a parametric surface representation of the
design model to locate the closest points. This study uses point
sets to represent the geometric data of the respective measured
and nominal models, so a different technique is required to
determine the corresponding points. One option is to conduct
a linear search for the closest point in the nominal model to
each measured point based on Euclidean distance, but for large
point sets this approach is impractical as it leads to excessive
computing times. The computational efficiency may be improved
by as much two orders of magnitude by building a k-dimensional
binary search tree or k − d tree from the data points in the nominal
model and querying the tree for each point in the measured
model [20]. A nearest neighbour algorithm is used to find the
closest point to a given target point on the tree. At each stage of
the search the algorithm makes an approximation of the nearest
distance and subsequently terminates when the possibility of more
than one nearest neighbour no longer exists [21]. Consequently,
large portions of the search space can be avoided using this
method.

866

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

4.2.1. Least squares minimisation
There are two general methods for least squares minimisation
in 3D registration problems, i.e., quaternion based and singular
value decomposition (SVD) based methods. Horn presented a
quaternion based approach, whereby rotations were represented
as quaternions to simplify problems due to orthogonal rotation
matrices [22]. Alternatively, the SVD approach is computationally
very efficient and easily generalised to 3D problems. Consequently,
this study employs a SVD-based solution method similar to that
proposed by Arun et al. [23]. The transformation matrix generated
from the least squares minimisation of the respective point sets
will be represented by an orthogonal rotation matrix and a
translation vector. Thus, for known correspondences between a
measured point set, Mi and a nominal point set, Ni , the registration
method aims to find a rotation matrix, R and a translation matrix,
T that minimises the weighted sum of the squared distances
between the respective point sets, given by the cost function
defined in the following equation:
F =

S


wi ∥Ni − (RMi + T )∥2

(19)

i

where the centroids of the nominal and measured point sets may
be calculated according to:
S

i=1

N =

S


wi

i=1

wi M i

i=1
S


.

(26)

wi

i=1

Thus, on substitution of Eq. (26) into Eq. (22), F may be defined
as
S


F =

wi

3



Nik − N k − rkT Mi − M

i=1

+



2

k=1

3




λk rkT rk − 1 + 2λ4 r1T r2 + 2λ5 r1T r3 + 2λ6 r2T r3 .

(27)

k=1

By equating the partial derivative of F with respect to the
components of ri to zero yields the following series of equations
S



T

wi Mi − M Mi − M r1 + λ1 r1 + λ4 r2 + λ5 r3

r1
R = r2T 
r3T

(20)

where each component of R is a 3 × 1 vector, the orthogonality
constraint results in the following six constraint equations:

r3T r3 = 1

=0

r1T r3

=0

(21)



T
wi Mi − M Mi − M r2 + λ4 r1 + λ2 r2 + λ6 r3

i=1
S


=




wi Ni2 − N 2 Mi − M

(29)

i=1



T
wi Mi − M Mi − M r3 + λ5 r1 + λ6 r2 + λ3 r3
S


=




wi Ni3 − N 3 Mi − M .

(30)

i=1

These equations may be simplified by letting

r2T r3 = 0.

A=

S


Applying these constraints, Eq. (19) may be represented as
S 
3


wi Nik − rkT Mi − Tk


2

+

i=1 k=1

3


i=1

λ1
Λ = λ4
λ5

λk rkT rk − 1



k=1

(22)

where λi , i = 1–6 represent Lagrangian multipliers used to
enforce the orthogonality constraints and
Ni1
Ni2 ,
Ni3




Mi =

Mi1
Mi2
Mi3



T
wi Mi − M Mi − M ,
λ4
λ2
λ6





+ 2λ4 r1T r2 + 2λ5 r1T r3 + 2λ6 r2T r3



(28)

i=1

r2T r2 = 1
r1T r2




wi Ni1 − N 1 Mi − M

i=1

S


r1T r1 = 1

S


=
S


 T

Ni =

and M =

i=1

where S represents the size of the measured point set and the
weights wi = 1/S. Given that R is an orthonormal rotation matrix,
then RT = R−1 . Thus, if the rotation matrix is represented by

F =

S


wi Ni



T1
T2 .
T3

 
and T =


λ5
λ6 ,
λ3

(31)
B = [b1 b2 b3 ]

where
bk =

S





wi Nik − N k Mi − M .

(32)

i=1

Thus, Eqs. (28)–(30) may be represented as
(23)

ART + RT Λ = B.

(33)

Multiplying both sides of Eq. (33) by R gives

As is detailed in [23], the minimisation condition may then be
applied by equating the partial derivative of F with respect to λi to
zero, resulting in

RART + Λ = RB.

S


Consequently, R may be found by obtaining the singular value
decomposition of B, whereby

wi (Ni − RMi − T ) = 0.

(24)

B = UDV .

i−1

(35)

Since both RAR and Λ are symmetric, Eq. (33) implies

Rearranging Eq. (24) gives
T = N − RM

(34)

T

(25)

RB = (RB)T .

(36)

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

Therefore
RUDV = (UDV ) R .
T

T

(37)

R=V U .
T

(ii) Search through the repositioned measurement data for the
′
point Kprof
such that


 

 ⃗   ⃗′ 
K1 K5  = K1 Kprof  .

Given that U and V are orthogonal and D is diagonal, then
T

(38)

Thus, once R is known, T is determined using Eq. (25).
4.2.2. The ICP algorithm
The main limitation with the ICP method is that the presence
of local minima within the parameter space explored by the algorithm may lead to non-global convergence. However, this scenario can be avoided by ensuring that the respective surfaces are
located in close proximity before applying ICP, thereby providing a
greater chance of convergence to the global minimum. In any case,
for the purposes of this study, due to the constraints applied in the
FE simulation, the respective models are sufficiently close to implement the ICP algorithm. The ICP algorithm implemented in this
study consists of the following steps:
(i) For each discrete point, Mi in the measured point set compute
the closest point (in terms of Euclidean distance), Ni on the
surface of the nominal model.
(ii) Calculate the rotation matrix, R and translation matrix, T
which minimises the cost function defined by Eq. (25) using
the SVD-based solution method.
(iii) Apply the transformation to the measured point set.
(iv) If the change in residual error from Eq. (25) is greater than a
threshold value, go back to step (i); otherwise stop.
Convergence to a minimum is found by comparing the change
in residual error between iterations with a pre-specified threshold
value. Local minima are detected if a significant number of
residuals are above the threshold. In this case, the ICP procedure is
set to terminate when the difference in residual error is less then
1e−5 .
4.3. Blade profile positioning for profile error evaluation
After localisation, there remains a total deviation between
the measured profile and the nominal curve. Therefore, this
necessitates an algorithm to align the respective data sets in order
to gain an accurate appraisal of the profile error. The profile error
evaluation algorithm employed by the virtual inspection system
aligns the concave and convex profiles of each section with their
counterparts on the nominal at predefined locations specified by
the K points close to the leading (K1 and K2 ) and trailing (K5 and
K6 ) edges of the nominal model. This repositioning procedure is
implemented by performing a translation, T and rotation, R in
sequence. Firstly, each measured profile is translated vertically
until it coincides with the relevant nominal profile at K1 or K2 . The
second stage of the transformation involves alignment with the
remaining K point at K5 or K6 . This is achieved by rotation about K1
or K2 . However, in order to find the required angle of rotation, it is
necessary to use a searching algorithm to locate a directionvector

′
K1′⃗Kprof
on the measured profile with a magnitude equal to K1⃗K5 .

′
K1⃗K5 · K1⃗Kprof




 .
φ = cos−1  
 ⃗  ⃗′ 
K1 K5  K1 Kprof 

(41)

(iv) Consequently, the newly positioned measurement data, D′m is
defined by
D′m = T + R (ϕ) Dm .

(42)

(v) Produce a graphical plot displaying the form error as the
deviation of the newly positioned measured profile from the
nominal profile, as shown in Fig. 6.
5. System framework
The virtual inspection systems software framework is based
on an object-orientated design, which operates on a Windows
platform. The open source, high level programming language,
Python, forms the core of the scripting architecture. Python is
ideally suited to this application for a variety of reasons including
its diverse library of standard extensions, in particular the Numpy
extension which allows the efficient storage and manipulation
of substantial amounts of numerical data, its modularity and it
offers extensibility, permitting the extension of existing programs
with modules for implementing specific functionality. As some
of the aforementioned least squares calculations and form fitting
algorithms are performed in Matlab, the system employs a
high-level Python to Matlab bridge or application programming
interface (API), which starts a Matlab engine session in the
background, permitting Matlab functions to be called from Python
by allowing Numpy arrays to be passed back and forth and
arbitrary commands to be executed in the Matlab workspace.
The finite element forging simulation was conducted using
DEFORM-3D. The entire virtual inspection system framework is
composed of five layers. The data input layer comprises three
components including the nominal model in .stl format, the model
of the forged blade in either .key (native DEFORM-3D format) or .stl
format and a .txt file detailing the user defined input parameters.
Primarily, the input parameter file consists of nominal coordinate
data for the K points and the six datum points that define design
coordinate frame. Other parameters specified include tolerance
values for the convergence criteria used by the various iterative
algorithms employed by the system. Also, file paths are designated,
defining the location of the respective input blade models and an
appropriate folder to store the results of the parameters analysis
module. Fig. 9 shows the framework of the entire virtual inspection
system.
6. Results and discussion



′
is the point on the measured profile located by the searching
Kprof
algorithm.
The blade profile positioning and error evaluation process for a
concave profile is described in the following steps:

(i) Apply a translation, T to the measurement profile, Dm to
coincide with K1 . Thus, if PS = (xS , yS ) is an arbitrary point on
the concave blade profile, then the new position, PS′ after the
above transformation is applied can be expressed in matrix
form as:
PS′ = PS + T .

(40)

(iii) Apply a rotation, R to the repositioned measurement data by
an amount ϕ defined by





867

(39)

To illustrate the effectiveness of the proposed methodology, a
test case of a forged compressor blade is presented in this section.
All relative geometric and dimensional tolerances of the finite
element model are evaluated by the virtual inspection system
and a comparison is made with inspection data from the actual
component.
6.1. Finite element simulation
A finite element forging simulation of an industrial case Nialloy blade was performed. The constitutive models defining the

868

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

Fig. 9. Virtual inspection system framework.

(a) Convex die.

(b) Workpiece.

(c) Concave die.

Fig. 10. 3D model of workpiece and forging dies.

deformation behaviour for the billet were defined as rigid-plastic
during forging and elastic–plastic during the unloading and cooling
stages, whereas elastic deformation was defined for the forging
dies throughout the entire simulation. Fig. 10 displays the meshed
3D models of the components used in the forging simulation.
The initial temperatures specified for the billet and the dies
were 1000 °C and 230 °C, respectively. Other parameters defined
in the pre-processing environment include the heat transfer
coefficient at the interface between the workpiece and dies, hf
which was set at 11 kW/m2 °C and the coefficient of friction,
µ between the workpiece and die surface which was assumed
to be 0.2 [5,24]. The forging simulation comprised of four stages
including forging, unloading, cooling and trimming. Fig. 11 shows
the FE model including both the dies and workpiece before and
after forging operations.
6.2. Profile error evaluation
To assess the accuracy of the blades formed from the finite
element method, a comparison is made between the actual profile
error recorded by the coordinate measurement process and that
generated by the virtual inspection system. A one-way analysis of
variance (ANOVA) test is used to test for differences between the
CMM and virtual profile error data sets. The .stl file of the designed

aerofoil blade, also used as the geometry for generating the FE
meshes of the forging dies, are used as blade nominal shape, whilst
the nodal positions of the FE mesh from the final forged aerofoil
shape excluding the flash areas are used for finding the datum
features in the 3–2–1 registration method and for generating the
point cloud using the ICP method. Table 2 details a comparison
between the profile error recorded by the coordinate measurement
machine and the virtual inspection system. As variants are both
positive and negative for the profile error, the root mean square
(RMS) error is the most appropriate representation of the average
deviation from the nominal. Also, the standard deviation and p
value are recorded for the each data set.
The virtual inspection and corresponding CMM profile error
plots are shown in Figs. 12–23. It should be noted that the
vertical axis on these plots refers only to the definition of
the nominal profile (highlighted in blue). The actual error and
tolerance bands (defined in black and red respectively) are scaled
up by a factor of 10. This is indicated in the top left of each
error plot. The profile error at the mid convex section displays
the strongest correlation with a comparatively large p value of
0.741. This strong comparison is further reaffirmed by the high
degree of similarity apparent between the form of the profile
error plots, evident in Figs. 14 and 15. Overall, a good level of
conformity exists between the respective profile error plots with

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

(a) Initial mesh.

869

(b) Post-cooling.
Fig. 11. Finite element mesh of workpiece and die.

Table 2
Profile error comparison.
Profile error

RMS (mm)

Stand dev (mm)

p value

Significant?

Root convex

CMM
Virtual

0.016
0.021

0.013
0.015

0.122

NO

Mid convex

CMM
Virtual

0.013
0.012

0.014
0.012

0.741

NO

Tip convex

CMM
Virtual

0.017
0.012

0.014
0.011

0.224

NO

Root concave

CMM
Virtual

0.020
0.020

0.012
0.018

0.026

YES

Mid concave

CMM
Virtual

0.014
0.014

0.010
0.012

0.124

NO

Tip concave

CMM
Virtual

0.022
0.015

0.013
0.012

0.061

NO

Fig. 12. Virtual root convex profile error.

the vast majority of cases reporting p values in excess of 0.05
and thereby failing to reject the null hypothesis, indicating no
apparent statistical significant difference between the respective
data sets. The only exception to this trend applies to the root
concave profile. As indicated by the results of the ANOVA test,
a significant level of divergence is noticeable between the CMM
and virtual measurements, particularly around the trailing edge
region of the profile, as shown in Fig. 19. This occurrence may be
attributed to the inaccuracy of the FE simulation in the transition
area close to the root block due to a relatively coarse mesh.

Fig. 13. CMM root convex profile error.

6.3. Comparison of dimensional and geometric tolerances
The dimensional and geometric tolerance measurements performed by the comparative analysis module of the virtual inspection system, as well as a comparison with the corresponding CMM
data are given in Tables 3–5.
In terms of the thickness data, it is evident from Table 3 that a
strong correlation exists between the virtual and CMM measurements as similar values of section thickness and standard deviation are recorded. Also, relatively small discrepancies between the

870

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

Table 3
Profile error comparison.
Data source

CMM
Virtual
a

Root section thickness (mm)

Mid section thickness (mm)

Tip section thickness (mm)

LEa

MID

TE

LE

MID

TE

LE

MID

TE

0.262
0.320

0.302
0.304

0.314
0.304

0.318
0.326

0.296
0.290

0.286
0.301

0.325
0.311

0.285
0.286

0.284
0.285

RMS (mm)

Stand dev (mm)

0.297
0.303

0.020
0.016

LE—leading edge, TE—trailing edge, MID—K point 3.

Fig. 14. Virtual mid convex profile error.

Fig. 15. CMM mid convex profile error.

Fig. 16. Virtual tip convex profile error.

Fig. 17. CMM tip convex profile error.

Fig. 18. Virtual root concave profile error.

Fig. 19. CMM root concave profile error.

inspection processes are apparent for bow error measurements.
Moreover, as shown in Table 4, a similar trend in the magnitude
of the bow error is apparent, as in each case the maximum bow occurs at the root section. However, in terms of twist error as shown
Table 5, the average value recorded from the final model is roughly
three times the magnitude of that recorded by the CMM. Moreover,
the CMM data indicates a change in twist angle direction between
the mid and tip section, whereas the twist angle remains in the

same direction for the forged finite element model. This occurrence
may be related to inaccuracies in post-forging simulation.
6.4. Evaluation of localisation methods
The virtual inspection system offers two forms of localisation,
namely the 3–2–1 method which incorporates the use of datum
points to register the component and the ICP method which is

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

871

Fig. 20. Virtual mid concave profile error.

Fig. 21. CMM mid concave profile error.

Fig. 22. Virtual tip concave profile error.

Fig. 23. CMM tip concave profile error.

more suited to the registration of free-form surfaces. This section
compares the effectiveness of both methods in localising the part
by analysing the deviation from the nominal over the measured
area of the free-form surface.
Figs. 24 and 27 display the deviation of the measured area
of the aerofoil surface from the nominal after localisation by the
3–2–1 and ICP methods, respectively. Accompanying the deviation
contour plots are histograms indicating the frequency distribution
of the deviation data and normality plots to assess the likelihood
of each data set adhering to a normal distribution.
In relation to the 3–2–1 registered model, it is obvious that
the concave surface of the aerofoil exhibits a generally smaller
deviation from the nominal in comparison to the convex surface.
This trend may be attributed to the fact that all three of the
datum points forming the primary datum plane on the model
are located on the concave surface of the model. Therefore, in
general, the concave surface will be positioned much closer to its
counterpart surface on the nominal in comparison to the convex
surface, thus yielding a comparatively smaller deviation overall.
Consequently, as a result of this mismatch in the alignment of the
respective free-form surfaces, the distribution of the deviation data
will inevitably be affected. The shape of the distribution is revealed
by the histogram of the frequency distribution in Fig. 25.
The diagram indicates a bimodal or ‘‘two-peak’’ distribution
as opposed to the classical unimodal distribution. This is characterised by the appearance of two centres or regions where most
probability resides within the body of the distribution. Each of the
respective regions represents the deviation data for the concave
and convex surfaces. The validity of this observation may be confirmed by comparing the location of the deviation data indicated by
Fig. 24 in relation to the distribution of the data shown in Fig. 25.
The plot shown in Fig. 26 displays a significant amount of variation
from the straight line, indicating the data is obviously not normally
distributed.

Conversely, as shown in Fig. 27, the ICP localised surface displays a more uniform deviation with values of similar magnitude
recorded for each surface. The distribution of the data, as shown
in Fig. 28, is relatively symmetric. Also, the majority of data points
on the normality plot shown in Fig. 29 form a linear pattern, indicating that the normal distribution is a good model for this data
set. Suspected outliers, identified as points lying of the hypothetical straight line, are apparent towards the upper extremities of the
deviation data set. These values correspond with relatively large
deviation values recorded on the contour plot towards the leading
and trailing edges of the root section, as shown in Fig. 27. On comparing the two methods, it is clear that the ICP approach is much
more effective in registering the part, as the algorithm is applied to
the entire surface of the component and is not just confined to specific datum points or reference features, as with the 3–2–1 method.
This serves to generate a localised part with a symmetric distribution of the deviation data and significantly less statistical dispersion, as indicated in Table 6. Although better registration accuracy
may be achieved using the ICP method in virtual inspection, quantitative evaluation of the effect on the dimensional and shape accuracy of the forged blade has yet to be established, which is one area
for further study. In terms of the computational efficiency of the
virtual inspection, less than 100 s computing time is required for
the localisation computation using a normal desktop computer. As
the registration algorithm was the most computationally expensive aspect of the approach, the whole virtual inspection procedure
is compared more favourably to the actual CMM measurement process, which normally takes up to 5 min to complete the 3–2–1 registration of the actual part.
As any deviation in the shape or form of either cylindrical
datum feature would significantly affect the location of the datum
reference frame, it is necessary to gain an accurate appraisal of the
extent to which each cylindrical surface deviates from the desired

872

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

0.500
0.423
0.347
0.270
0.193
0.117
0.040
-0.040
-0.117
-0.193
-0.270
-0.347
-0.423
-0.500

Fig. 24. Deviation of (a) concave surface and (b) convex surface from nominal for 3–2–1 registered model.

4

Table 4
Bow error comparison.
Root bow (mm)

Mid bow (mm)

RMS (mm)

3

CMM
Virtual

0.038
0.043

0.020
0.024

0.030
0.034

2
Normal Quantile (Z)

Data source

Table 5
Twist error comparison.
Data source

Mid twist angle Tip twist angle RMS

CMM
Virtual

0.114°
0.250°

−0.136°

0.414°

0.125°
0.342°

500

Normal Fit

Normal Fit
(Skewness=0.12, Kurtosis=-1.56)

1
0
-1
-2

450
-3

400
Frequency

350
-4
-0.15 -0.1 -0.05

300
250
200
150

0

0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45
DEV

Fig. 26. Normal probability plot for deviation data of 3–2–1 registered model.

100
50
0
-0.15 -0.1 -0.05

0

0.05 0.1 0.15 0.2 0.25 0.3 0.35 0.4 0.45
DEV

Fig. 25. Histogram of frequency distribution for deviation from nominal of 3–2–1
registered model.

tolerance specifies that all points of the surface must lie in some
zone bounded by two co-axial cylinders whose radii differ by the
specified tolerance. The cylindricity tolerance is defined according
to


 t


 ˆ


 T × P⃗ − A⃗  − r  ≤

2

Table 6
Deviation comparison between 3–2–1 and ICP localisation procedures.
Deviation

3–2–1 method (mm)

Max dev (+)
Max dev (−)
Average (+/−)
St dev

−0.119
0.183/ − 0.034

0.401

0.140

ICP method (mm)
0.268
0.000
0.129/0.000
0.021

form, implied by the nominal. An indication of the cylindrical
deviation may be achieved by measuring the cylindricity of each
datum feature. According to the ANSI Y14.5.1M standard [25],
cylindricity is categorised as a form tolerance and is defined
as ‘‘a condition of a surface of revolution in which all points of
the surface are equidistant from a common axis’’. A cylindricity

(43)

⃗ is a
where Tˆ is the direction vector of the cylindricity axis, A
position vector locating the cylindricity axis, P⃗ is the position
vector of a point on the surface of the datum feature, r is the radial
distance from the cylindricity axis to the centre of the tolerance
zone and t is the size of the cylindricity zone. The cylindricity for
both the root and tip cylindrical datum features was evaluated for
each feature using the nodal positions of the finite element mesh
over each features surface. The mean cylindricity calculated for the
root and tip datum features was 0.10 mm and 0.04 mm respectively
with a standard deviation of 0.04 mm and 0.03 mm. By using a t
value similar to that of the profile error tolerance of 0.2 mm, the
cylindricity value for both pips meets the specified tolerance, as
defined in Eq. (43).

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

873

0.500
0.423
0.347
0.270
0.193
0.117
0.040
-0.040
-0.117
-0.193
-0.270
-0.347
-0.423
-0.500
Fig. 27. Deviation of (a) concave surface and (b) convex surface from nominal for the ICP localised model.

700
Normal Fit

600

Frequency

500
400
300
200
100
0
0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2 0.22 0.24 0.26 0.28
DEV
Fig. 28. Histogram of frequency distribution for deviation from nominal of ICP
localised model.

6

Normal Fit
(Skewness=0.33, Kurtosis=1.60)

5
4

Normal Quantile (Z)

3
2
1
0
-1
-2
-3
-4
0.02 0.04 0.06 0.08 0.1 0.12 0.14 0.16 0.18 0.2 0.22 0.24 0.26 0.28
DEV
Fig. 29. Normal probability plot for deviation data of ICP localised model.

7. Conclusions
In terms of the localisation process, results indicate that
the classical 3–2–1 approach commonly used by the CMM in
industry may not be the best approach in the application to
the free-form aerofoils surface. Alternatively, the ICP approach

provides a much better solution to the registration problem
by considerably reducing the deviation from the nominal and
generating a more uniformly localised part. Overall, the magnitude
and form of the profile tolerances assessed by the system display
a strong correlation with that evaluated by the CMM. Virtual
inspection data obtained from FE simulation recorded for the
section thickness was highly consistent with the corresponding
CMM data, with a discrepancy of 6 µm and 4 µm recorded for the
r.m.s thickness and standard deviation, respectively. Similarly, the
results generated for the bow error were also highly comparable
with the actual inspection data, as the r.m.s value generated by
the system differs by only 6 µm. Conversely, a relatively large
deviation was apparent between the twist error values for both the
mid and tip sections. This unusually large deviation in twist is likely
to be attributed to the inaccuracy of the post-forging simulation,
in particular, the simulation of the cooling process. However, by
conducting a sensitivity analysis of the effect of pre-processing
conditions such as friction and mesh density on the dimensional
accuracy of the component, it may be possible to obtain inspection
results which are even more consistent with the CMM data.
In any case, the virtual inspection system provides a fully
automated, robust procedure for the dimensional inspection of
forged aerofoil blade models formed using the finite element
method. The localisation process used by the system accurately
registers the component with the nominal model. The inspection
and parameters analysis modules incorporate various iterative
algorithms and the latest evaluation techniques to successfully
quantify the forging error to within a high degree of accuracy.
The strong correlation between measurements generated from
this system and actual CMM measurement data, and the normal
distribution of shape deviation from the nominal model, validates
the approach as an effective means to quantify the forging
error using the coordinate measurement process in a virtual
environment.
Acknowledgements
The authors would like to thank the UK Engineering and
Physical Science Research Council (EPSRC) for funding the present
research (EP/C004140/1 and EP/C004140/2).
References
[1] Li Y, Gu P. Free-form surface inspection techniques state of the art review.
Journal of Computer-Aided Design 2004;36(13):1395–417.
[2] Hsu T, Lai J, Ueng WE. On the development of airfoil section inspection
and analysis technique. International Journal of Advanced Manufacturing
Technology 2006;36:1–12.

874

J.E. Makem et al. / Computer-Aided Design 44 (2012) 858–874

[3] Hartley P, et al. Numerical simulation of the forging process. Computer
Methods in Applied Mechanics & Engineering 2006;195(48–49):6676–90.
[4] Bariani PF, Bruschi S, Dal Negro T. Integrating physical and numerical
simulation techniques to design the hot forging process of stainless steel
turbine blades. International Journal of Machine Tools & Manufacture 2004;
44(9):945–51.
[5] Lu B, Ou H, Armstrong CG, et al. 3D die shape optimisation for net-shape
forging of aerofoil blades. Materials & Design 2009;30(7):2490–500.
[6] Hsu T, Lai J, Ueng WE, Hwang JZ. A coordinate setup algorithm based on six
points principle for airfoil blades inspection. Journal of the Chinese Society of
Mechanical Engineers 2004;25(4):353–61.
[7] Li Y, Gu P. Inspection of free-form shaped parts. Journal of Robotics and
Computer-Integrated Manufacturing 2005;21(3):421–30.
[8] Besl PJ, McKay ND. A method for registration of 3D shapes. IEEE Transactions
on Pattern Analysis and Machine Intelligence 1992;14(2):239–56.
[9] Huang X, Gu P, Zernicke R. Localisation and comparison of two free-form
surfaces. Journal of Computer-Aided Design 1996;28(12):1017–22.
[10] Menq CH, Yau HT, Lai GY. Automated precision measurement of surface profile
in CAD-directed inspection. IEEE Transactions on Robotics and Automation
1992;8(2):268–78.
[11] Ainsworth I, Ristic M, Brujic D. CAD-based measurement path planning for
free-form shapes using contact probes. International Journal of Advanced
Manufacturing Technology 2000;16(4):23–31.
[12] Ristic M, Brujic D, Ainsworth I. Measurement-based updating of turbine
blade CAD models: a case study. International Journal of Computer-Integrated
Manufacturing 2004;17(4):352–63.
[13] Lai JY, Chen KJ. Localisation of parts with irregular shape for CMM inspection.
International Journal of Advanced Manufacturing Technology 2007;32:
1188–200.

[14] Hsu T, Lai J, Ueng WE, Hwang JZ. An iterative coordinate setup algorithm
for airfoil blade inspection. International Journal of Advanced Manufacturing
Technology 2005;26(7–8):797–807.
[15] Cardew-Hall M, Cosmas J, Ristic M. Automated proof inspection of turbine
blades. International Journal of Advanced Manufacturing Technology 1988;
3(2):67–88.
[16] Pahk HJ, Ahn WJ. Precision inspection system for aircraft parts having very
thin features based on CAD/CAI integration. International Journal of Advanced
Manufacturing Technology 1996;12(2):442–9.
[17] Huang X, Gu P. CAD-model based inspection of sculptured surfaces with
datums. International Journal of Production Research 1998;36(5):1351–67.
[18] Ge Q, Chen B, Smith P, Menq CH. Tolerance specification and comparative
analysis for computer integrated dimensional inspection. International
Journal of Production Research 1992;30(9):2173–9.
[19] Forbes AB. Least-squares best fit geometric elements. National Physics
Laboratory Report. 1989.
[20] Bentley JL. Multidimensinal binary search trees used for associative searching.
Communications of the ACM 1975;18(9):509–17.
[21] Friedman JH, Bently JL, Finkel RA. An algorithm for finding best matches
in logarithmic expected time. ACM Transactions on Mathematical Software
1977;3(3):209–26.
[22] Horn BKP. Closed form solution of absolute orientation using unit quaternions.
Journal of the Optical Society of America A 1987;4(4):629–42.
[23] Arun KS, Huang TS. Blostein. Least-squares fitting of two 3D point sets.
IEEE Transactions on Pattern Analysis and Machine Intelligence 1987;9(5):
698–700.
[24] Lu B. 3D die shape optimisation for net shape forging of aerofoil blades. Ph.D.
Dissertation. Belfast: Queen’s University; 2008.
[25] Dimensioning and Tolerancing, ANSI standard Y14.5M. American National
Standard Institute. 1994.

