Artiﬁcial Intelligence 175 (2011) 1722–1736

Contents lists available at ScienceDirect

Artiﬁcial Intelligence
www.elsevier.com/locate/artint

Algorithms and complexity results for persuasive argumentation ✩,✩✩
Eun Jung Kim a , Sebastian Ordyniak b , Stefan Szeider b,∗
a
b

AlGCo project-team, CNRS, LIRMM, Montpellier, France
Institute of Information Systems, Vienna University of Technology, Austria

a r t i c l e

i n f o

a b s t r a c t

Article history:
Received 1 October 2010
Received in revised form 2 March 2011
Accepted 4 March 2011
Available online 8 March 2011
Keywords:
Abstract argumentation
Value-based argumentation frameworks
Computational complexity
Graphical models
Bounded treewidth

The study of arguments as abstract entities and their interaction as introduced by
Dung (1995) [1] has become one of the most active research branches within Artiﬁcial
Intelligence and Reasoning. A main issue for abstract argumentation systems is the
selection of acceptable sets of arguments. Value-based argumentation, as introduced by
Bench-Capon (2003) [8], extends Dung’s framework. It takes into account the relative
strength of arguments with respect to some ranking representing an audience: an
argument is subjectively accepted if it is accepted with respect to some audience, it is
objectively accepted if it is accepted with respect to all audiences.
Deciding whether an argument is subjectively or objectively accepted, respectively, are
computationally intractable problems. In fact, the problems remain intractable under
structural restrictions that render the main computational problems for non-value-based
argumentation systems tractable. In this paper we identify nontrivial classes of value-based
argumentation systems for which the acceptance problems are polynomial-time tractable.
The classes are deﬁned by means of structural restrictions in terms of the underlying
graphical structure of the value-based system. Furthermore we show that the acceptance
problems are intractable for two classes of value-based systems that where conjectured to
be tractable by Dunne (2007) [12].
© 2011 Elsevier B.V. All rights reserved.

1. Introduction
The study of arguments as abstract entities and their interaction as introduced by Dung [1] has become one of the most
active research branches within Artiﬁcial Intelligence and Reasoning, see, e.g., [2–4]. Argumentation handles possible conﬂicts between arguments in form of attacks. The arguments may either originate from a dialogue between several agents or
from the pieces of information at the disposal of a single agent, this information may even contain contradictions. A main
issue for any argumentation system is the selection of acceptable sets of arguments, where an acceptable set of arguments
must be in some sense coherent and be able to defend itself against all attacking arguments. Abstract argumentation provides suitable concepts and formalisms to study, represent, and process various reasoning problems most prominently in
defeasible reasoning (see, e.g., [5,6]) and agent interaction (see, e.g., [7]).
Extending Dung’s concept, Bench-Capon [8] introduced value-based argumentation systems that allow to compare arguments with respect to their relative strength such that an argument cannot successfully attack another argument that is
considered of a higher rank. The ranking is speciﬁed by the combination of an assignment of values to arguments and an

✩
Ordyniak and Szeider’s research was supported by the European Research Council, grant reference 239962. Kim’s research was partially supported by
the EPSRC, grant reference EP/E034985/1.
✩✩
A preliminary and shortened version of this paper appeared in COMMA 2010.
Corresponding author.
E-mail address: stefan@szeider.net (S. Szeider).

*

0004-3702/$ – see front matter
doi:10.1016/j.artint.2011.03.001

© 2011 Elsevier B.V.

All rights reserved.

E.J. Kim et al. / Artiﬁcial Intelligence 175 (2011) 1722–1736

1723

ordering of the values; the latter is called an audience [9]. As laid out by Bench-Capon, the role of arguments in this setting
is to persuade rather than to prove, demonstrate or refute. Whether an argument can be accepted with respect to all possible
or at least one audience allows to formalize the notions of objective acceptance and subjective acceptance, respectively.
An important limitation for using value-based argumentation systems in real-world applications is the computational
intractability of the two basic acceptance problems: deciding whether a given argument is subjectively accepted is NPhard, deciding whether it is objectively accepted is co-NP-hard [10]. Therefore it is important to identify classes of valuebased systems that are still useful and expressible but allow a polynomial-time tractable acceptance decision. However,
no nontrivial tractable classes of value-based systems have been identiﬁed so far, except for systems with a tree structure
where the degree of nodes and the number of nodes of degree exceeding 2 are bounded [11]. In fact, as pointed out by
Dunne [12], the acceptance problems remain intractable for value-based systems whose graphical structures form trees, in
strong contrast to the main computational problems for non-value-based argumentation that are linear-time tractable for
tree systems, or more generally, for systems of bounded treewidth [12].
1.1. Our contribution
In this paper we introduce nontrivial classes of value-based systems for which the acceptance problems are tractable.
The classes are deﬁned in terms of the following notions:

• The value-width of a value-based system is the largest number of arguments of the same value.
• The extended graph structure of a value-based system has as nodes the arguments of the value-based system, two arguments are joined by an edge if either one attacks the other or both share the same value.

• The value graph of a value-based system has as vertices the values of the system, two values v 1 and v 2 are joined by a
directed edge if some argument of value v 1 attacks an argument of value v 2 [11].
We show that the acceptance problems are tractable for the following classes of value-based systems:
(P1) value-based systems with a bipartite graph structure where at most two arguments share the same value (i.e., systems
of value-width 2);
(P2) value-based systems whose extended graph structure has bounded treewidth; and
(P3) value-based systems of bounded value-width whose value graphs have bounded treewidth.
In fact, we show that both acceptance problems are linear-time tractable for the classes (P2) and (P3), the latter being
a subclass of the former. Our results suggest that the extended graph structure is a suitable structural representation of
value-based argumentation systems. The positive results (P1)–(P3) hold for systems with unbounded number of arguments,
attacks and values.
We contrast our positive results with negative results that rule out classes conjectured to be tractable. We show that the
acceptance problems are (co)-NP-hard for the following classes:
(N1) value-based systems of value-width 2;
(N2) value-based systems where the number of attacks between arguments of the same value is bounded (systems of
bounded attack-width);
(N3) value-based systems with bipartite value graphs.
In fact, we show that both acceptance problems are intractable for value-based systems of value-width 2 and attack-width 1.
Classes (N1) and (N2) were conjectured to be tractable [12], the complexity of (N3) was stated as an open problem [11].
The reminder of the paper is organized as follows. In Section 2 we provide basic deﬁnitions and preliminaries. In Section 3 we deﬁne the parameters value-width and attack-width and establish the results involving systems of value-width 2,
we also discuss the relationship between systems of value-width 2 and dialogues [9]. In Section 4 we consider value-based
systems with an extended graph structure of bounded treewidth and show linear-time tractability. We close in Section 5
with concluding remarks. Some proofs of technical lemmas are given in Appendix A.
The main results of this paper have been presented in preliminary and shortened form at COMMA’10 [13]. Here we
provide full proofs, examples, and additional discussions. Further new additions are the results (P3) and (N3) involving
value graphs, and the discussion of the relationship between systems of value-width 2 and dialogues.
2. Arguments, attacks, values, and audiences
In this section we introduce the objects of our study more formally.
2.1. Abstract argumentation system
Deﬁnition 1. An abstract argumentation system or argumentation framework is a pair ( X , A ) where X is a ﬁnite set of elements
called arguments and A ⊆ X × X is a binary relation called the attack relation. If (x, y ) ∈ A we say that x attacks y.

1724

E.J. Kim et al. / Artiﬁcial Intelligence 175 (2011) 1722–1736

Fig. 1. The abstract argumentation system F 0 and value-based system F of Examples 1 and 2, respectively.

An abstract argumentation system F = ( X , A ) can be considered as a directed graph, and therefore it is convenient to
borrow notions and notation from the theory of directed graphs [14]. For example we say that a system F = ( X , A ) is acyclic
if ( X , A ) is a DAG (a directed acyclic graph).
Example 1. An abstract argumentation system F 0 = ( X , A ) with arguments X = {a, b, c , d, e , f } and attacks A = {(a, d), (a, e ),
(b, a), (c , d), (d, b), ( f , c )} is displayed in Fig. 1.
Next we deﬁne commonly used semantics of abstract argumentation systems as introduced by Dung [1]. For the
discussion of other semantics and variants, see, e.g., Baroni and Giacomin’s survey [15]. Let F = ( X , A ) be an abstract
argumentation system and S ⊆ X .
1.
2.
3.
4.

S
S
S
S

is
is
is
is

conﬂict-free in F if there is no (x, y ) ∈ A with x, y ∈ S.
acceptable in F if for each x ∈ S and each y ∈ X with ( y , x) ∈ A there is some x ∈ S with (x , y ) ∈ A.
admissible in F if it is conﬂict-free and acceptable.
a preferred extension of F if S is admissible in F and there is no admissible set S of F that properly contains S.

For instance, the admissible sets of the abstract argumentation system F 0 of Example 1 are the sets ∅ and { f }, hence { f } is
its only preferred extension.
Let F = ( X , A ) be an abstract argumentation system and x1 ∈ X . The argument x1 is credulously accepted in F if x1 is
contained in some preferred extension of F , and x1 is skeptically accepted in F if x1 is contained in all preferred extensions
of F .
In this paper we are especially interested in ﬁnding preferred extensions in acyclic abstract argumentation systems. It
is well known that every acyclic system F = ( X , A ) has a unique preferred extension GE( F ), and that GE( F ) can be found
in polynomial time (GE( F ) coincides with the “grounded extension” [1]). In fact, GE( F ) can be found via a simple labeling
procedure that repeatedly applies the following two rules to the arguments in X until each of them is either labeled in or
out:
1. An argument x is labeled in if all arguments that attack x are labeled out (in particular, if x is not attacked by any
argument).
2. An argument x is labeled out if it is attacked by some argument that is labeled in.
The unique preferred extension GE( F ) is then the set of all arguments that are labeled in.
2.2. Value-based systems
Deﬁnition 2. A value-based argumentation framework or value-based system is a tuple F = ( X , A , V , η) where ( X , A ) is an
argumentation framework, V is a set of values, and η is a mapping X → V such that the abstract argumentation system
F v = (η−1 ( v ), {(x, y ) ∈ A | x, y ∈ η−1 ( v )}) is acyclic for all v ∈ V .
We call two arguments x, y ∈ X to be equivalued (in F ) if η(x) = η( y ).
The requirement for F v to be acyclic is also known as the Multivalued Cycles Assumption, as it implies that any set of
arguments that form a directed cycle in F = ( X , A ) will contain at least two arguments that are not equivalued [8].
Deﬁnition 3. An audience for a value-based system F is a partial ordering
speciﬁc if it is a total ordering on V .
For an audience

on the set V of values of F . An audience

we also deﬁne < in the obvious way, i.e., x < y if and only if x

is

y and x = y.

Deﬁnition 4. Given a value-based system F = ( X , A , V , η) and an audience
for F , we deﬁne the abstract argumentation
system induced by from F as F = ( X , A ) with A = {(x, y ) ∈ A | ¬(η(x) < η( y ))}.

E.J. Kim et al. / Artiﬁcial Intelligence 175 (2011) 1722–1736

1725

Fig. 2. Acyclic abstract argumentation system relative to the six speciﬁc audiences on values T , S , E.

Note that if
is a speciﬁc audience, then F
preferred extension GE( F ).

= ( X , A ) is an acyclic system and thus, as discussed above, has a unique

Example 2. Consider the value-based system F = ( X , A , V , η) obtained from the abstract argumentation framework F 0 of
Example 1 by adding the set of values V = { S , E , T } and the mapping η with η(a) = η(b) = S, η(c ) = η(d) = E, η(e ) =
η( f ) = T . The value-based system F is depicted in Fig. 1 where the three ellipses indicate arguments that share the same
value.
Deﬁnition 5. Let F = ( X , A , V , η) be a value-based system. We say that an argument x1 ∈ X is subjectively accepted in F
such that x1 is in the unique preferred extension of F . Similarly, we say that an
if there exists a speciﬁc audience
argument x1 ∈ X is objectively accepted in F if x1 is contained in the unique preferred extension of F for every speciﬁc
audience .
Example 3. Consider our running example, the value-based system F given in Example 2. Suppose F represents the interaction of arguments regarding a city development project, and assume the arguments a, b are related to sustainability issues
(S), the arguments c , d are related to economics (E), and the arguments e , f are related to traﬃc issues (T ).
that gives highest priority to sustainability, medium priority to economics, and
Now, consider the speciﬁc audience
lowest priority to traﬃc (S > E > T ). This audience gives rise to the acyclic abstract argumentation system F obtained
from F by deleting the attack (d, b) (as η(b) = S > E = η(d), d cannot attack b with respect to the audience) and deleting
the attack ( f , c ) (as η(c ) = E > T = η( f ), f cannot attack c with respect to the audience).
Fig. 2 exhibits the acyclic abstract argumentation systems induced by the six possible speciﬁc audiences. The unique
preferred extension for each of the six systems is indicated by shaded nodes. We conclude that all arguments of F are
subjectively accepted, and e , f are the arguments that are objectively accepted.
2.3. Computational problems for value-based systems
We consider the following decision problems.
Subjective Acceptance
Instance: A value-based system F = ( X , A , V , η) and a query argument x1 ∈ X .
Question: Is x1 subjectively accepted in F ?
Objective Acceptance
Instance: A value-based system F = ( X , A , V , η) and a query argument x1 ∈ X .
Question: Is x1 objectively accepted in F ?
As shown by Dunne and Bench-Capon [10], Subjective Acceptance is NP-complete and Objective Acceptance is co-NPcomplete. Indeed, there are k! possible speciﬁc audiences for a value-based system with k values. Hence, even if k is
moderately small, say k = 10, checking all k! induced abstract argumentation system becomes impractical. Dunne [11]
studied properties of value-based systems that allow to reduce the number of audiences to consider.
2.4. Graphical models of value-based systems
In view of the general intractability of Subjective Acceptance and Objective Acceptance, the main decision problems for
value-based systems, it is natural to ask which restrictions on shape and structure of value-based systems allow tractability.
A natural approach is to impose structural restrictions in terms of certain graphical models associated with value-based
systems. We present three graphical models: the graph structure (an undirected graph on the arguments of the value-based
system under consideration, edges represent attacks) the value graph (a directed graph on the values of the value-based
system under consideration, edges represent attacks) and the extended graph structure (an undirected graph on the arguments
of the value-based system under consideration, edges represent attacks and “equivaluedness”). The concept of value graphs
was recently introduced and studied by Dunne [11]. The concept of extended graph structures is our new contribution.

1726

E.J. Kim et al. / Artiﬁcial Intelligence 175 (2011) 1722–1736

ext
Fig. 3. A value-based system F with its graph structure G F , value graph G val
F , and extended graph structure G F .

Deﬁnition 6. Let F = ( X , A , V , η) be a value-based system.
The graph structure of F is the (undirected) graph G F = ( X , E ) whose vertices are the arguments of F and where two
arguments x, y are joined by an edge (in symbols xy ∈ E) if and only if X contains the attack (x, y ) or the attack ( y , x).
The value graph of F is the directed graph G val
F = ( V , E ) whose vertices are the values of F and where two values u , v are
joined by a directed edge from u to v (in symbols (u , v ) ∈ E) if and only if there exist some argument x ∈ X with η(x) = u,
some argument y ∈ X with η( y ) = v, and (x, y ) ∈ A.
The extended graph structure of F is the (undirected) graph G ext
F = ( X , E ) whose vertices are the arguments of F and
where two arguments x, y are joined by an edge if and only if (x, y ) ∈ A or η(x) = η( y ).
Fig. 3 shows the value-based system of Example 2 and the three associated graphical models.
Deﬁnition 7. A value-based system F = ( X , A , V , η) is called bipartite if its graph structure is a bipartite graph, i.e., if X can
be partitioned into two conﬂict-free sets.
3. Value-width and attack-width
Dunne [12] suggested to consider restrictions on the number of arguments that share the same value, and the number
of attacks between equivalued arguments. We state these restrictions in terms of the following notions.
Deﬁnition 8. Let F = ( X , A , V , η) be a value-based system. The value-width of F is the largest number of arguments that
share the same value, i.e., max v ∈ V |η−1 ( v )|. The attack-width of F is the cardinality of the set {(x, y ) ∈ A | η(x) = η( y )}.
For instance, the value-based system of Example 2 has value-width 2 and attack-width 2.
Value-based systems of value-width 1 are not very interesting: Every argument x in such a value-based system is subjectively accepted (x is accepted with respect to any speciﬁc audience where η(x) is largest), and objectively accepted if and
only if x is not attacked by any argument y (if y attacks x then x is not accepted with respect to any speciﬁc audience
where η( y ) is largest). Thus, for value-based systems of value-width 1 the problems Subjective and Objective Acceptance
are trivial, and the expressive power of such value-based systems is very limited.
On the other hand, value-based systems of value-width 3 are already too expressive to allow a tractable acceptance
decision: Dunne [12] showed that the problems Subjective and Objective Acceptance are intractable (NP-complete and
co-NP-complete, respectively) for value-based systems of value-width 3, even if their graph structure is a tree.
This leaves the intermediate class of value-based systems of value-width 2 as an interesting candidate for a tractable class.
In fact, Dunne [12] conjectured that both acceptance problems are polynomial-time decidable for value-based systems of
value-width 2. He also conjectured that the problems are polynomial for value-based systems with an attack-width that
is bounded by a constant. We disprove both conjectures and show that the problems remain intractable for value-based
systems of value-width 2 and (simultaneously) of attack-width 1.
On the positive side, we show that under the additional assumption that the value-based system is bipartite (that entails
value-based systems whose graph structures are trees) both acceptance problems can be decided in polynomial time for
value-based systems of value-width 2.
Theorem 1.
(A) Subjective Acceptance remains NP-hard for value-based systems of value-width 2 and attack-width 1.
(B) Objective Acceptance remains co-NP-hard for value-based systems of value-width 2 and attack-width 1.
Theorem 2.
(A) Subjective Acceptance can be decided in polynomial time for bipartite value-based systems of value-width 2.
(B) Objective Acceptance can be decided in polynomial time for bipartite value-based systems of value-width 2.
In the remainder of this section we will demonstrate the two theorems.

E.J. Kim et al. / Artiﬁcial Intelligence 175 (2011) 1722–1736

1727

3.1. Certifying paths
The key to the proofs of Theorems 1 and 2 is the notion of a “certifying path” which deﬁnes a certain path-like substructure within a value-based system. We show that in value-based systems of value-width 2, the problems of Subjective
and Objective Acceptance can be expressed in terms of certifying paths. We then show that in general ﬁnding a certifying
path in a value-based system of value-width 2 is NP-hard (3SAT can be expressed in terms of certifying paths) but is easy
if the system is bipartite.
Deﬁnition 9. Let F = ( X , A , V , η) be a value-based system of value-width 2. We call an odd-length sequence C =
(x1 , z1 , . . . , xk , zk , t ), k 0, of distinct arguments a certifying path for x1 ∈ X in F if it satisﬁes the following conditions:
C1
C2
C3
C4
C5

For every 1 i k it holds that η( zi ) = η(xi ).
For every 1 i k there exists a 1
j i such that zi attacks x j .
For every 2 i k it holds that xi attacks zi −1 but xi does not attack any argument in { zi , x1 , . . . , xi −1 }.
Argument t attacks zk but it does not attack any argument in {x1 , . . . , xk }.
If there exists an argument z ∈ X \ {t } with η( z) = η(t ) then either t attacks z or z does not attack any argument in
{x1 , . . . , xk , t }.

Lemma 1. Let F = ( X , A , V , η) be a value-based system of value-width 2 and x1 ∈ X . Then x1 is subjectively accepted in F if and only
if there exists a certifying path for x1 in F .
The rather technical proof of this lemma is given in Appendix A. We discuss the intuition behind the concept of certifying
paths by means of an example.
Example 4. Consider the value-based system F of Example 2. We want to check whether argument a is subjectively accepted, i.e., to identify a speciﬁc audience
such that a is in the unique preferred extension GE( F ) of F . Since a is
attacked by b and we cannot eliminate this attack (a and b are equivalued), we need to defend a by attacking b. The only
possibility for that is to attack b by d. Hence we need to put S < E in our audience. However, since d is attacked by the
equivalued argument c, we need to defend it by attacking c by f , hence we need to put S < E < T . Since f is not attacked
by any other argument we can stop. Via this process we have produced a certifying path C a = (a, b, d, c , f ), and we can
check that C a indeed satisﬁes Deﬁnition 9. For the other subjectively accepted arguments of F we have the certifying paths
C b = (b), C c = (c ), C d = (d, c , f ), C e = (e ) and C f = ( f ).
In order to use the concept of certifying paths for objective acceptance, we need the following deﬁnition.
Deﬁnition 10. Let F = ( X , A , V , η) be a value-based system and v ∈ V a value. We denote by F − v the value-based system
obtained from F by deleting all arguments with value v and all attacks involving these arguments.
Lemma 2. Let F = ( X , A , V , η) be a value-based system of value-width 2 and x1 ∈ X . Then x1 is objectively accepted in F if and only
if for every argument p ∈ X that attacks x1 it holds that η( p ) = η(x1 ) and p is not subjectively accepted in F − η(x1 ).
Again, the technical proof is moved to Appendix A.
Example 5. In our example, consider the argument e. We want to check whether e is objectively accepted. Since e is only
attacked by a, and since η(a) = η(e ), it remains to check whether a is not subjectively accepted in F − η(e ). In fact, F − η(e )
contains no certifying path for a. Hence e is objectively accepted in F .
3.2. Hardness for value-based systems of value-width 2
This subsection is devoted to prove Theorem 1. We devise a polynomial reduction from 3SAT. Let Φ be a 3CNF formula
with clauses C 1 , . . . , C m and C j = x j ,1 ∨ x j ,2 ∨ x j ,3 for 1
j
m. In the following we construct a value-based system
F = ( X , A , V , η) of value-width 2 and attack-width 1 such that the query argument x1 ∈ X is subjectively accepted in F if
and only if Φ is satisﬁable. See Fig. 4 for an example.
The set X contains the following arguments:
1. a pair of arguments x j , z j for 1
2. a pair of arguments xij , zij for 1
3. an argument t.

j
j

m;
m and 1

i

3;

1728

E.J. Kim et al. / Artiﬁcial Intelligence 175 (2011) 1722–1736

Fig. 4. The value-based system F in the proof of Theorem 1 for the 3CNF formula (x1 ∨ x2 ∨ x3 ) ∧ (¬x1 ∨ x2 ∨ ¬x3 ) ∧ (x1 ∨ ¬x2 ∨ ¬x3 ).

The set A contains the following attacks:
1. ( z1 , x1 );
2. (xij , z j ) and ( zij , x j ) for 1
3.
4.
5.

(x j +1 , zij ) and
i
(t , zm
) for 1
i
(x j , xij ) for 1

(z j +1 , xij )
i

j

for 1

m and 1
j

i

3;

m − 1 and 1

i

3;

3;
j < j

m and 1

i, i

3 whenever x j ,i and x j ,i are complementary literals.

The set V contains one value for each x, z pair, and one value for argument t, i.e., | V | = 4m + 1. Consequently, the mapping
η is deﬁned such that η(x j ) = η(z j ) = v j , η(xij ) = η(zij ) = v ij for 1 j m, 1 i 3, and η(t ) = v t . Evidently F has
attack-width 1 and value-width 2, and it is clear that F can be constructed from Φ in polynomial time.
We establish part (A) of Theorem 1 by showing the following claim.
Claim 1. Φ is satisﬁable if and only if x1 is subjectively accepted in F .
i

i

i

i

Proof. First we note that every certifying path for x1 in F must have the form (x1 , z1 , x11 , z11 , x2 , z2 , x22 , z22 , x3 , z3 , . . . , xm , zm ,
i

i

ij

ij

xmm , zmm , t ) where i j ∈ {1, 2, 3} for every 1
j m and for every pair 1
j< j
m there is no attack (x j , x j ) ∈ A. Hence
there exists a certifying path for x1 in F if and only if there exists a set L of literals that corresponds to a satisfying truth
assignment of Φ (i.e., L contains a literal of each clause of Φ but does not contain a complementary pair of literals). ✷
In order to show part (B) of Theorem 1, let F be the value-based system as constructed above and deﬁne F =

( X , A , V , η ) to be the value-based system with
1. X := X ∪ {x0 },
2. A := A ∪ {(x1 , x0 )},
3. V := V ∪ { v 0 },
4. η (x0 ) = v 0 and η (x) = η(x) for every x ∈ X .
Part (B) of Theorem 1 follows from the following claim which follows from Claim 1 and Lemma 2.
Claim 2. Φ is satisﬁable if and only if x0 is not objectively accepted in F .
By a slight modiﬁcation of the above reduction we can also show the following, answering a research question recently
posed by Dunne [11]. The detailed argument is given in Appendix A.

E.J. Kim et al. / Artiﬁcial Intelligence 175 (2011) 1722–1736

1729

Corollary 1. Subjective and Objective Acceptance remain NP-hard and co-NP-hard, respectively, for value-based systems whose
value graphs are bipartite.
3.3. Certifying paths and dialogues
Bench-Capon, Doutre, and Dunne [9] developed a general dialogue framework that allows to describe the acceptance
of arguments in a value-based system in terms of a game, played by two players, the proponent and the opponent. The
proponent tries to prove that a certain argument (or a set of arguments) is accepted, the opponent tries to circumvent
the proof. An argument is subjectively accepted if the proponent has a winning strategy, that is, she is able to prove the
acceptance regardless of her opponent’s moves.
In the following we outline a simpliﬁed version of the dialogue framework that applies to value-based systems of valuewidth 2. We will see that certifying paths correspond to winning strategies for the proponent.
Let F = ( X , A , V , η) be a value-based system of value-width 2. We have two players, the proponent and the opponent,
who make moves in turn, at each move asserting a new argument. This produces a sequence (x1 , y 1 , x2 , y 2 , . . .) of arguwith η(x1 ) = η( y 2 ) < η(x2 ) = η( y 2 ) < · · · . The proponent has the ﬁrst move, where she
ments and a set of audiences
asserts the query argument x1 whose subjective acceptance is under consideration. After each move of the proponent, asserting argument xi , the opponent asserts a new argument y i ∈ X \ {x1 , y 1 , . . . , xi −1 , y i −1 , xi } which has the same value
as xi but is not attacked by xi , and attacks some argument asserted by the proponent. If no such argument y i exists, the
proponent has won the game. After each move of the opponent asserting an argument y i , it is again the proponent’s turn
to assert a new argument xi +1 ∈ X \ {x1 , y 1 , . . . , xi , y i }. This argument xi +1 must attack the opponent’s last argument y i , but
must not attack any argument asserted by the proponent. If no such argument xi +1 exists, the proponent has lost the game.
Because the value-width of F is assumed to be 2, the opponent has at most one choice for each move. Therefore, the proponent’s wining strategy does not need to consider several possibilities for the opponent’s counter move. Hence, a winning
strategy is not a tree but just a path and can be identiﬁed with a sequence (x1 , y 1 , . . . , xn−1 , yn−1 , xn ) that corresponds to
a play won by the proponent. It is easy to verify that such a sequence is exactly a certifying path.
Example 6. Consider again the value-based system F of Example 2. The proponent wants to prove that argument a is
subjectively accepted in F and asserts a with her ﬁrst move. Now, it is the opponent’s turn. He has no other choice but to
assert b (the only argument different from a with the same value as a). Now, it is again the proponent’s turn. She must
/ {a, b} that attacks b but does not attack a. Argument d satisﬁes this property (it happens that this
assert an argument x ∈
is the only choice). Next, the opponent asserts c, and the proponent asserts f , and it is again the opponent’s turn. The
only argument with the same value as f is argument e, but e does not attack any of the arguments in {a, d, f }. Hence, the
proponent wins. The sequence of arguments (a, b, d, c , f ) produced by this play is indeed a certifying path for a in F . Hence
a is subjectively accepted.
3.4. Polynomial-time algorithm for bipartite value-based systems of value-width 2
In this subsection we prove Theorem 2. Throughout this section, we assume that we are given a bipartite value-based
system F = ( X , A , V , η) together with a query argument x1 . Furthermore, let X even and X odd be the subsets of X containing
all arguments x such that the length of a shortest directed path in F from x to x1 is even and odd, respectively.
Lemma 3. Let C = (x1 , z1 , . . . , xk , zk , t ) be a certifying path for x1 in F . Then {xi | 1

i

k} ∪ {t } ⊆ X even and { zi | 1

i

k} ⊆ X odd .

Proof. The claim follows easily via induction on k by using the properties of a certifying path and the fact that F is
bipartite. ✷
Based on the observation of Lemma 3, we construct an auxiliary directed graph H F := ( V , E ) as follows. The vertex set
of H F is the set V of values of F . There is a directed edge from u to v if and only if there is an argument x ∈ X even with
η(x) = u and an argument z with η(z) = v such that (x, z) ∈ A. Note that z ∈ X odd since F is bipartite.
Lemma 4. If C = (x1 , z1 , . . . , xk , zk , t ) is a certifying path for x1 in F , then (η(t ), η(xk ), . . . , η(x1 )) is a directed path from η(t ) to
η(x1 ) in H F .
Proof. By the deﬁnition of a certifying path, we have (t , zk ) ∈ A and for every 2 i k it holds that (xi , zi −1 ) ∈ A. Lemma 3
implies that for t and xi are contained in X even for every 1 i k, and hence (η(t ), η(xk )), (η(xi ), η(xi −1 )) ∈ E for every
2 i k. ✷
Lemma 4 tells us that each certifying path in F gives rise to a directed path in H F .

1730

E.J. Kim et al. / Artiﬁcial Intelligence 175 (2011) 1722–1736

Fig. 5. A bipartite value-based system F , the associated axillary graph H F , and various subgraphs obtained by deleting a value.

Example 7. Fig. 5 shows a bipartite value-based system F and the associated auxiliary graph H F . The query argument is x1 . Hence X even = {x1 , . . . , x5 } and X odd = { z1 , . . . , z5 }. The query argument x1 is subjectively accepted in F as
C = (x1 , z1 , x2 , z2 , x4 , z4 , x5 ) is a certifying path for x1 in F . Indeed, C gives rise to the directed path v 5 , v 4 , v 2 , v 1 (i.e.,
η(x5 ), η(x4 ), η(x2 ), η(x1 )) in H F , as promised by Lemma 4.
It would be desirable if we could ﬁnd certifying paths by searching for directed paths in H F . However, not every directed
path in H F gives rise to a certifying path in F . To overcome this obstacle, we consider for each value v ∈ V the subgraph
v
of H F which is obtained as follows:
H−
F
If there is an argument z ∈ X odd ∩ η−1 ( v ) that is not attacked by some equivalued argument, then for every argument
y ∈ X even that is attacked by z we remove the vertex η( y ) from H F .
v
Fig. 5 shows the graphs H −
for the value-based system F of Example 7.
F
Lemma 5. Consider an odd-length sequence C = (x1 , z1 , . . . , xk , zk , t ) of distinct arguments of a bipartite value-based system F of
value-width 2. Then C is a certifying path for x1 in F if and only if the following conditions hold:
(1)

η(xi ) = η(zi ) for 1

i

k.

−η(t )

(2) (η(t ), η(xk ), . . . , η(x1 )) is a directed path from η(t ) to η(x1 ) in H F

.
−η(xi )

(3) None of the sub-sequences η(xi ), . . . , η(x1 ) is a directed path from η(xi ) to η(x1 ) in H F

for 1

i

k.

Proof. Assume C = (x1 , z1 , . . . , xk , zk , t ) is a certifying path for x1 in F . Property (1) follows from condition C1 of a certifying
path, property (2) follows from condition C5 and Lemma 4. Property (3) follows from conditions C2 and C3.
To see the reverse assume that C satisﬁes properties (1)–(3). Condition C1 follows from property (1). Conditions C3, C4
and C5 follow from property (2) and the assumption that F is bipartite. Condition C2 follows from property (3). Hence C is
a certifying path for x1 in F . ✷
Indeed, consider the certifying path C of Example 7 which gives rise to the sequence of values v 5 , v 4 , v 2 , v 1 . This
−v
−v
sequence is a directed path in H F 5 , however v 4 , v 2 , v 1 is not a directed path in H F 4 , v 2 , v 1 is not a directed path in
−v 2

−v

, and v 1 is not a directed path in H F 1 .
Lemma 5 suggests a simple strategy for ﬁnding a certifying path for x1 in F , if one exists. For each value v we search
v
for a directed path v k , . . . , v 1 from v = v k to v 1 = η(x1 ) in H −
F . If we ﬁnd such a path v k , . . . , v 1 , we check for each
HF

−v

subsequence v i , . . . , v 1 , 1 i < k, whether it is a directed path in H F i . If the answer is no for all i, then v k , . . . , v 1
satisﬁes the conditions of Lemma 5. Hence the sequence of arguments in X whose values form P is a certifying path for x1
in F . If, however, the answer is yes for some i < k, we take the smallest i for which the answer is yes. Now the sequence
v i , . . . , v 1 satisﬁes the conditions of Lemma 5 and so gives rise to a certifying path for x1 in F . On the other hand, if there
v
contains a directed path from v to v 1 , then there is no certifying path for x1 in F .
is no value v such that H −
F
The pseudocode for this algorithm is given in Fig. 6.
Proposition 1. The algorithm Detect Certifying Path correctly returns a certifying path for x1 in F = ( X , A , V , η) if one exists and
returns NO otherwise in time O (| V |2 · (| X | + | A | + | V |)).
v
Proof. The correctness of Detect Certifying Path follows from Lemma 5. For v ∈ V , building H −
and ﬁnding a shortest
F
directed path from v to v 1 = η(x1 ), if one exists, takes linear time in the input size of F (which we estimate by the term
O (| X | + | A | + | V |)). As we iterate over all vertices of V , and we check for at most | V | subsequences v i , . . . , v 1 whether it
−v
is a directed path in H F i , the claimed running time follows. ✷

E.J. Kim et al. / Artiﬁcial Intelligence 175 (2011) 1722–1736

1731

Algorithm Detect Certifying Path
Input: value-based system F = ( X , A , V , η), query argument x1 ∈ X
Output: a directed path in H F that corresponds to a certifying path for x1 in F ,
or no if there is no certifying path for x1 in F
for all v ∈ V do
v
check if H −
F contains a directed path from v to v 1

if yes do
find such a path, v k , . . . , v 1 , v = v k
for i = 1, . . . , k do
−v i

check if v i , . . . , v 1 is a directed path in H F
if yes, output v i , . . . , v 1 and terminate
return NO and terminate

Fig. 6. Polynomial-time algorithm for the detection of a certifying path in a bipartite value-based system of value-width 2.

We are now ready to combine the above results to a proof of Theorem 2. Statement (A) of the theorem follows from
Lemma 1 and Proposition 1. Statement (B) follows from Statement (A) and Lemma 2.
4. Linear-time algorithm for value-based systems of bounded treewidth
As mentioned above, it is known that both acceptance problems remain intractable for value-based systems whose graph
structure is a tree. This is perhaps not surprising since two arguments can be considered as linked to each other if they
share the same value. In fact, such links may form cycles in an otherwise tree-shaped value-based system. Therefore we
propose to consider the extended graph structure of the value-based system (recall Deﬁnition 6 in Section 2.4) that takes
such links into account. We show that the problems Subjective and Objective Acceptance are easy for value-based systems
whose extended graph structure is a tree, and more generally, the problems can be solved in linear time for value-based
systems with an extended graph structure of bounded treewidth.
Treewidth is a popular graph parameter that indicates in a certain sense how similar a graph is to a tree. Many otherwise
intractable graph problems (such as 3-Colorability) become tractable for graphs of bounded treewidth. Bounded treewidth
(and related concepts like induced width and d-treewidth) have been successfully applied in many areas of AI, see, e.g., [16–
19]. Deciding acceptance for argumentation frameworks of bounded treewidth has been investigated by Dunne [12] and
by Dvorák, Pichler, and Woltran [20]. However, for value-based argumentation, the concept of bounded treewidth has not
been applied successfully: the basic decision problems for value-based systems remain intractable for value-based systems
of value-width 3 whose graph structure has treewidth 1 [12]. Hardness even prevails for value-based systems whose value
graph has pathwidth 2 [11]. These negative results are contrasted by our Theorem 3, which indicates that the extended
graph structure seems to be a suitable and adequate graphical model for value-based systems.
The treewidth of a graph is deﬁned using the following notion of a tree decomposition (see, e.g., [21]).
Deﬁnition 11. A tree decomposition of an (undirected) graph G = ( V , E ) is a pair ( T , χ ) where T is a tree and χ is a labeling
function that assigns each tree node t a set χ (t ) of vertices of the graph G such that the following conditions hold:
1. Every vertex of G occurs in χ (t ) for some tree node t.
2. For every edge {u , v } of G there is a tree node t such that u , v ∈ χ (t ).
3. For every vertex v of G, the tree nodes t with v ∈ χ (t ) form a connected subtree of T .
The width of a tree decomposition ( T , χ ) is the size of a largest bag χ (t ) minus 1 among all nodes t of T . A tree decomposition of smallest width is optimal. The treewidth of a graph G is the width of an optimal tree decomposition of G.
Example 8. Fig. 7 exhibits a graph (the extended graph structure of the value-based system of Example 2) and a tree
decomposition of it. The width of the tree decomposition is 2, and it is not diﬃcult to see that this is optimal. Hence the
treewidth of the graph in the ﬁgure is 2.
4.1. Linear-time tractability for value-based systems with extended graph structures of bounded treewidth
We are going to establish the following result.
Theorem 3. The problems Subjective and Objective Acceptance can be decided in linear time for value-based systems whose extended graph structure has bounded treewidth.

1732

E.J. Kim et al. / Artiﬁcial Intelligence 175 (2011) 1722–1736

Fig. 7. A graph and its tree decomposition.

To achieve tractability we have to pay a price in generality: The mentioned hardness results of [11,12] imply that if Subjective Acceptance is ﬁxed-parameter tractable for any parameter p, then, unless P = NP, parameter p cannot be bounded
by a function of any of the following three parameters: the treewidth of the graph structure, the treewidth of the value
graph, and the value-width. This even holds if the bounding function is exponential. Indeed, the treewidth of the extended
graph structure can be arbitrarily large for value-based systems where any of these three parameters is bounded by a
constant.
The reminder of this section is devoted to a proof of Theorem 3. We shall take a logic approach and use the celebrated
result of Courcelle [22], which states that all properties that can be expressed in a certain formalism (Monadic SecondOrder logic, MSO) can be checked in linear time for graphs (or more generally, for ﬁnite structures) of bounded treewidth.
Courcelle’s Theorem is constructive in the sense that it not only promises the existence of an algorithm for the particular
problem under consideration, but it provides the means for actually producing such an algorithm. The algorithm produced
in this general and generic way leaves much room for improvement and provides the basis for the development of problemspeciﬁc and more practical algorithms.
In the following we use Courcelle’s result as laid out by Flum and Grohe [23]. Let S denote a ﬁnite relational structure
and ϕ a sentence in monadic second-order logic (MSO logic) on S. That is, ϕ may contain quantiﬁcation over atoms (elements of the universe) and over sets of atoms. Furthermore, we associate with the structure S its Gaifman graph G ( S ),
whose vertices are the atoms of S, and where two distinct vertices are joined by an edge if and only if they occur together
in some tuple of a relation of S. We deﬁne the treewidth of structure S as the treewidth of its Gaifman graph G ( S ). Now
Courcelle’s Theorem states that for a ﬁxed MSO sentence ϕ and a ﬁxed integer k, one can check in linear time whether ϕ
holds for a given relational structure of treewidth at most k. The proof of Theorem 3 boils down to the following two tasks:
Task A.
Task B.

To represent a value-based system F and a query argument x1 by a relational structure S [ F , x1 ] such that bounded
treewidth of the extended graph structure of F implies bounded treewidth of S [ F , x1 ].
To construct formulas ϕs and ϕo in MSO logic such that for every value-based system F and every argument x1
of F it holds that ϕs is true for S [ F , x1 ] if and only if x1 is subjectively accepted in F , and ϕo is true for S [ F , x1 ]
if and only if x1 is objectively accepted in F .

4.2. Reference graphs
For many problems it is rather straight-forward to ﬁnd an MSO formulation so that Courcelle’s Theorem can be applied.
In our case, however, we have to face the diﬃculty that we have to express that “a certain property holds for some total
ordering” (subjective acceptance) and “a certain property holds for all total orderings” (objective acceptance), which cannot
be directly expressed in MSO. Our solution to this problem lies in the introduction of an auxiliary directed graph R, the
reference graph, which will allow us to quantify over total orderings of V . The relational structure S [ F , x1 ] will then be
deﬁned to represent F together with R.
Deﬁnition 12. Let F = ( X , A , V , η) be a value-based system and let ≺ be an arbitrary but ﬁxed total ordering of V . The
reference graph R = ( V , E R ) is the directed graph where V is the set of values of F and E R consists of all directed edges
(u , v ) for which
1. u ≺ v in the ﬁxed ordering, and
2. A contains an attack (x, x ) with

η(x) = u and η(x ) = v or η(x) = v and η(x ) = u.

For a subset Q ⊆ E R let R [ Q ] = ( V , E R [ Q ]) be the directed graph obtained from the reference graph R by reversing all
edges in Q , i.e., E R [ Q ] := {(u , v ) | (u , v ) ∈ E R \ Q } ∪ {( v , u ) | (u , v ) ∈ E R ∩ Q }.
We also deﬁne the abstract argumentation system F [ Q ] := ( X , A [ Q ]) as the system obtained from F with A [ Q ] :=
/ E R [ Q ]}.
{(u , v ) ∈ A | (η(u ), η( v )) ∈

E.J. Kim et al. / Artiﬁcial Intelligence 175 (2011) 1722–1736

1733

Fig. 8. Value-based system F of Example 2 and the corresponding Gaifman graph G ( S [ F , x1 ]).

Note that the reference graph R is by deﬁnition acyclic (in contrast to the value graph G val
F whose deﬁnition is similar
but distinct).
Every speciﬁc audience
of F can now be represented by some subset Q ⊆ E R for which the directed graph R [ Q ] is
acyclic, and conversely, every set Q ⊆ E R such that R [ Q ] is acyclic represents a speciﬁc audience . These observations are
made precise in the following lemma whose easy proof is omitted.
Lemma 6. An argument x1 is subjectively accepted in F if and only if there exists a set Q ⊆ E R such that R [ Q ] is acyclic and x1 is in
the unique preferred extension of F [ Q ]. An argument x1 is objectively accepted in F if and only if for every set Q ⊆ E R such that R [ Q ]
is acyclic it holds that x1 is in the unique preferred extension of F [ Q ].
Since we can test for acyclicity with MSO logic (see the next subsection), we can now express subjective and objective
acceptance in MSO logic as “a certain property holds for some subset Q of E R for which R [ Q ] is acyclic” and “a certain
property holds for all subsets Q of E R for which R [ Q ] is acyclic”, respectively. Next we give a more detailed description of
how to accomplish the two tasks for our proof.
4.3. Task A: representing the value-based system
We deﬁne a relational structure S [ F , x1 ] that represents the value-based system F together with the reference graph R =
( V , E R ). The universe of S [ F , x1 ] is the union of the sets X , V , and E R . S [ F , x1 ] has one unary relation U a∗ and four binary
relations H , T , B a and B η that are deﬁned as follows:
1.
2.
3.
4.
5.

Ua∗ (x) if and only if x = x1 (used to “mark” the query argument).
T(t , (u , v )) if and only if t = u (used to represent the “tail relation” of E R ).
H(h, (u , v )) if and only if h = v (used to represent the “head relation” of E R ).
Ba (x, y ) if and only if (x, y ) ∈ A (used to represent the attack relation).
Bη (x, v ) if and only if η(x) = v (used to represent the mapping η ).

Consequently, the Gaifman graph of S [ F , x1 ] is the graph G ( S [ F , x1 ]) = ( V S [ F ,x1 ] , E S [ F ,x1 ] ) with V S F = X ∪ V ∪ E R and
E S F = {{u , v } | (u , v ) ∈ T ∪ H ∪ Ba ∪ Bη }, see Fig. 8 for an illustration.
Lemma 7. The treewidth of S [ F , x1 ] is at most twice the treewidth of the extended graphs structure of F plus 1.
The easy proof is given in Appendix A.
4.4. Task B: expressing acceptance in MSO
In order to deﬁne ϕs and ϕo we introduce the following auxiliary formulas:
A formula TH(t , h, a) that holds if and only if t is the tail and h is the head of a ∈ E R :

TH(t , h, a) := T(t , a) ∧ H(h, a)
A formula E(t , h, Q ) that holds if and only if the directed edge (t , h) is contained in R [ Q ]:

E(t , h, Q ) := ∃a ¬ Q a ∧ TH(t , h, a) ∨ Q a ∧ TH(h, t , a)
A formula ACYC( Q ) that checks whether R [ Q ] is acyclic. We use the well-known fact that a directed graph contains a
directed cycle if and only if there is a nonempty set C of vertices each having an out-neighbor in C (see, e.g., [14]):

ACYC( Q ) := ¬∃C ∃xC x ∧ ∀t ∃h Ct → Ch ∧ E(t , h, Q )

1734

E.J. Kim et al. / Artiﬁcial Intelligence 175 (2011) 1722–1736

A formula Ba (t , h, Q ) that holds if and only if t attacks h in F [ Q ]:

Ba (t , h, Q ) := Ba (t , h) ∧ ∃ v h ∃ v t Bη (t , v t ) ∧ Bη (h, v h ) ∧ ¬E( v h , v t , Q )
A formula ADM( S , Q ) that checks whether a set S ⊆ X is admissible in F [ Q ]:

ADM( S , Q ) := ∀x∀ y Ba (x, y , Q ) ∧ S y → ¬ Sx ∧ ∃ z S z ∧ Ba ( z, x, Q )
Now the formula

ϕs can be deﬁned as follows:

ϕs := ∃ Q ACYC( Q ) ∧ ∃ S ∀x Ua∗ (x) → Sx ∧ ADM( S , Q )
of

It follows from Lemma 6 that ϕs is true for S [ F , x1 ] if and only if x1 is subjectively accepted in F . A trivial modiﬁcation
ϕs gives us the desired sentence ϕo :

ϕo := ∀ Q ACYC( Q ) → ∃ S ∀x Ua∗ (x) → Sx ∧ ADM( S , Q )
It follows from Lemma 6 that ϕo is true for S [ F , x1 ] if and only if x1 is objectively accepted in F .
We summarize the above construction in the next lemma.
Lemma 8. There exists an MSO sentence ϕs such that ϕs is true for S [ F , x1 ] if and only if x1 is subjectively accepted in F . Similarly,
there exists an MSO sentence ϕo such that ϕo is true for S [ F , x1 ] if and only if x1 is objectively accepted in F .
In view of Lemmas 7 and 8, Theorem 3 now follows by Courcelle’s Theorem.
If both the treewidth of the value graph and the value-width of a value-based system are bounded, then also the
extended graph structure has bounded treewidth, hence we have the following corollary.
Corollary 2. The problems Subjective and Objective Acceptance can be decided in linear time for value-based systems for which
both value-width and the treewidth of their value graphs are bounded.
Proof. Let k and k be constants. Let ( T , χ ) be a tree decomposition of the value graph of a value-based system F of width
k and assume the value-width of F is k . Then ( T , χ ) with χ (t ) = v ∈χ (t ) η−1 ( v ) is a tree decomposition of the extended
(k + 1)k holds for all nodes t of T , it follows that the width of ( T , χ )
graph structure of F . Since |χ (t )| |χ (t )| · k
is bounded by the constant k = (k + 1)k − 1. We conclude, in view of Theorem 3, that we can decide both acceptance
problems for F in linear time. ✷
5. Conclusion
We have studied the computational complexity of persuasive argumentation for value-based argumentation frameworks
under structural restrictions. We have established the intractability of deciding subjective or objective acceptance for valuebased systems with value-width 2 and attack-width 1, disproving conjectures stated by Dunne. It might be interesting to
note that our reductions show that intractability even holds if the attack relation of the value-based system under consideration forms a directed acyclic graph. On the positive side we have shown that value-based systems with value-width 2 whose
graph structure is bipartite are solvable in polynomial time. These results establish a sharp boundary between tractability
and intractability of persuasive argumentation for value-based systems with value-width 2. Furthermore we have introduced
the notion of the extended graph structure of a value-based system and have shown that subjective and objective acceptance
can be decided in linear time if the treewidth of the extended graph structure is bounded (that is, the problems are ﬁxedparameter tractable when parameterized by the treewidth of the extended graph structure). This is in strong contrast to the
intractability of the problems for value-based systems where the treewidth of the graph structure or the treewidth of their
value graph is bounded. Therefore we conclude that the extended graph structure seems to be an appropriate graphical
model for studying the computational complexity of persuasive argumentation. It might be interesting for future work to
extend this study to other graph-theoretic properties or parameters of the extended graph structure.
Acknowledgements
We thank the anonymous reviewers for valuable suggestions and for pointing out the connection between certifying
paths and dialogues.
Appendix A. Technical proofs
Proof of Lemma 1. Let C = (x1 , z1 , . . . , xk , zk , t ) be a certifying path for x1 in F . Take a speciﬁc audience
such that
η(x1 ) < · · · < η(xk ) < η(t ) and all other values in V are smaller than η(x1 ). We claim that the unique preferred extension
P = GE( F ) of F includes {x1 , . . . , xk , t } and excludes { z1 , . . . , zk }, which means that x1 is subjectively accepted in F . It

E.J. Kim et al. / Artiﬁcial Intelligence 175 (2011) 1722–1736

1735

follows from C5 that t is not attacked by any other argument in F and hence t ∈ P (see also Section 2 for a description of
an algorithm to ﬁnd the unique preferred extension of an acyclic abstract argumentation system). From C4 it follows that
zk ∈
/ P . Furthermore, if there exists an argument z = t, η(t ) = η(z) then either (t , z) ∈ A or z does not attack an argument
/ P and does not inﬂuence the membership in P for any other arguments in X . In the
in {x1 , . . . , xk , t }. In the ﬁrst case z ∈
second case z ∈ P but it does not attack any argument in {x1 , . . . , xk , t }. In both cases it follows that xk ∈ P . Using C3 it
/ P and since we already know that zk ∈
/ P it follows that xk−1 ∈ P . A repeated application of the above
follows that zk−1 ∈
arguments establishes the claim, and hence x1 ∈ P follows.
such that x1 is contained in the unique preferred extension
Conversely, suppose that there exists a speciﬁc audience
P = GE( F ) of F . We will now construct a certifying path C for x1 in F . Clearly, if there is no z1 ∈ X \ {x1 } with η( z1 ) =
η(x1 ) and (z1 , x1 ) ∈ A, then (x1 ) is a certifying path for x1 in F . Hence, it remains to consider the case where such a z1
exists. Since x1 ∈ P it follows that z1 ∈
/ P . The sequence (x1 , z1 ) clearly satisﬁes properties C1–C3. We now show that we
can always extend such a sequence until we have found a certifying path for x1 in F . Hence, let S = (x1 , z1 , . . . , xl , zl ) be
such a sequence satisfying conditions C1–C3, and in addition assume S satisﬁes the following two conditions:
S1 It holds that η(x1 ) < · · · < η(xl ).
S2 For every 1 i l we have xi ∈ P and zi ∈
/ P.
Clearly, the sequence (x1 , z1 ) satisﬁes S1 and S2, hence we can include these conditions in our induction hypothesis. It
remains to show how to extend S to a certifying path. Let Y := { y ∈ P | ( y , zl ) ∈ A ∧ η( y ) > η(xl ) = η( zl )}. Then Y = ∅
because zl ∈
/ P by condition S2 and the assumption that P is a preferred extension.
For each y ∈ Y let C y = (x1 , z1 , . . . , xl , zl , y ). If there is an argument y ∈ Y such that C y is a certifying path for x1 in F
we are done. Hence assume there is no such y ∈ Y .
/ A for
We choose xl+1 ∈ Y arbitrarily. Note that C xl+1 satisﬁes the condition C4; (xl+1 , zl ) ∈ A (as xl+1 ∈ Y ) and (xl+1 , xi ) ∈
1 i l (as xl+1 , xi ∈ P and P is conﬂict-free). Since we assume that C xl+1 is not a certifying path, C xl+1 must violate C5.
It follows that there exists some argument zl+1 with η( zl+1 ) = η(xl+1 ) such that (xl+1 , zl+1 ) ∈
/ A and (zl+1 , xi ) ∈ A for
some 1 i l + 1. We conclude that S = (x1 , z1 , . . . , xl , zl , xl+1 , zl+1 ) satisﬁes conditions C1–C3 and S1–S2. Hence, we are
indeed able to extend S and will eventually obtain a certifying path for x1 in F . ✷
Proof of Lemma 2. Assume that x1 is objectively accepted in F . Suppose there is a p ∈ X that attacks x1 and η( p ) = η(x1 ). If
we take a speciﬁc audience
where η(x1 ) is the greatest element, then x1 is not in the unique preferred extension of F ,
a contradiction to the assumption that x1 is objectively accepted. Hence η( p ) = η(x1 ) for all arguments p ∈ X that attack
x1 . Next suppose there is an argument p ∈ X that attacks x1 and is subjectively accepted in F − η(x1 ). Let
be a speciﬁc
audience such that p is in the unique preferred extension of ( F − η(x1 )) . We extend
to a total ordering of V ensuring
η(x1 ) η( p ). Clearly x1 is not in the unique preferred extension of F , again a contradiction. Hence indeed for all p ∈ X
that attack x1 we have η( p ) = η(x1 ) and p is not subjectively accepted in F − η(x1 ).
We establish the reverse direction by proving its counter positive. Assume that x1 is not objectively accepted in F . We
show that there exists some p ∈ X that attacks x1 and where either η( p ) = η(x1 ) or p is subjectively accepted in F − η(x1 ).
be a speciﬁc audience of F such that x1 is not in the unique preferred extension P = GE( F ) of F . In view of
Let
the labeling procedure for ﬁnding P as sketched in Section 2, it follows that there exists some p ∈ P that attacks x1 with
η(x1 ) η( p ). If η(x1 ) = η( p ) then we are done. On the other hand, if η( p ) = η(x1 ), then p is in the unique preferred
extension of ( F − η(x1 )) , and so p is subjectively accepted in F − η(x1 ). ✷
Proof of Corollary 1. We slightly modify the reduction from 3SAT as given in Section 3.2. Let C 1 , . . . , C m be the clauses of
the 3CNF formula Φ . It is well known that 3SAT remains NP-hard for formulas where each clause is either positive (all three
literals are unnegated variables) or negative (all three literals are negated variables), see [24]. Hence we may assume that for
some 2 k m, C 1 , . . . , C k are positive clauses and C k+1 , . . . , C m are negative clauses. Let F and F be the two value-based
systems corresponding to Φ as constructed in Section 3.2. We obtain from F the value-based system F B by adding a new
pair of arguments x B , y B with a new value v B = η(x B ) = η( y B ) and inserting the pair between the pairs xki , zki and the pair

xk+1 , zk+1 . That is, for 1 i 3 we replace the attacks (xk+1 , zki ) and ( zk+1 , xki ) with the attacks (x B , zki ) and ( z B , xki ), and
we add the attacks (xk+1 , z B ), ( zk+1 , x B ). By the same modiﬁcation we obtain from F the value-based system F B . Clearly
Claims 1 and 2 still hold for the modiﬁed value-based systems, i.e., Φ is satisﬁable if and only if x1 is subjectively accepted
in F , and Φ is satisﬁable if and only if x1 is not objectively accepted in F .
In order to establish the corollary it remains to show that the value graphs of F B and F B are bipartite.
We partition the set of arguments into two sets X 0 and X 1 . X 0 contains the values v j for j k, the value v B , and the
values v ij for j > k. X 1 contains the values v j for j > k, the values v ij for j k, and the value v t . For F B , X 1 contains also
the value v 0 . It is easy to check that there is no attack (a, b) with
bipartite value graphs. ✷

η(a), η(b) ∈ X 0 or η(a), η(b) ∈ X 1 , hence F B and F B have

Proof of Lemma 7. Let G be the graph obtained from G ( S [ F , x1 ]) = ( V S [ F ,x1 ] , E S [ F ,x1 ] ) by replacing every path of the form
(t , (t , h), h) for t , h ∈ V by an edge {t , h}; i.e., G = ( V , E ) where V = X ∪ V and E = ( E S [ F ,x1 ] ∩ {{u , v } | u , v ∈ X ∪

1736

E.J. Kim et al. / Artiﬁcial Intelligence 175 (2011) 1722–1736

V }) ∪ {{t , h} | (t , h) ∈ E R }. Conversely one can obtain G ( S [ F , x1 ]) from G by subdividing all edges of the form {t , h} for
t , h ∈ V and (t , h) ∈ E R with a vertex (t , h). However, subdividing edges does not change the treewidth of a graph [21],
hence it suﬃces to show that the treewidth of G is at most twice the treewidth of the extended graph structure of F
plus 1. Let T = ( T , χ ) be a tree decomposition of the extended graph structure of F . We observe that T = ( T , χ ) where
χ (t ) = χ (t ) ∪ {η( v ) | v ∈ X ∩ χ (t )} is a tree decomposition of G where |χ (t )| 2 · |χ (t )| for all nodes t of T ; hence the
width of T is at most twice the width of T plus 1. ✷
References
[1] P.M. Dung, On the acceptability of arguments and its fundamental role in nonmonotonic reasoning, logic programming and n-person games, Artiﬁcial
Intelligence 77 (2) (1995) 321–357.
[2] T.J.M. Bench-Capon, P.E. Dunne, Argumentation in artiﬁcial intelligence, Artiﬁcial Intelligence 171 (10–15) (2007) 619–641.
[3] P. Besnard, A. Hunter, Elements of Argumentation, The MIT Press, 2008.
[4] I. Rahwan, G.R. Simari (Eds.), Argumentation Artiﬁcial Intelligence, Springer-Verlag, 2009.
[5] J.L. Pollock, How to reason defeasibly, Artiﬁcial Intelligence 57 (1) (1992) 1–42.
[6] A. Bondarenko, P.M. Dung, R.A. Kowalski, F. Toni, An abstract, argumentation-theoretic approach to default reasoning, Artiﬁcial Intelligence 93 (1–2)
(1997) 63–101.
[7] S. Parsons, M. Wooldridge, L. Amgoud, Properties and complexity of some formal inter-agent dialogues, Journal of Logic and Computation 13 (3) (2003)
347–376.
[8] T.J.M. Bench-Capon, Persuasion in practical argument using value-based argumentation frameworks, Journal of Logic and Computation 13 (3) (2003)
429–448.
[9] T.J.M. Bench-Capon, S. Doutre, P.E. Dunne, Audiences in argumentation frameworks, Artiﬁcial Intelligence 171 (1) (2007) 42–71.
[10] P.E. Dunne, T.J.M. Bench-Capon, Complexity value-based argument systems, in: J.J. Alferes, J.A. Leite (Eds.), Logics in Artiﬁcial Intelligence, Proceedings of
the 9th European Conference, JELIA 2004, Lisbon, Portugal, September 27–30, 2004, in: Lecture Notes in Computer Science, vol. 3229, Springer-Verlag,
2004, pp. 360–371.
[11] P.E. Dunne, Tractability in value based argumentation, in: P. Baroni, F. Cerutti, M. Giacomin, G.R. Simari (Eds.), Computational Models of Argumentation,
Proceedings of COMMA 2010, in: Frontiers in Artiﬁcial Intelligence and Applications, vol. 216, IOS, 2010, pp. 195–206.
[12] P.E. Dunne, Computational properties of argument systems satisfying graph-theoretic constraints, Artiﬁcial Intelligence 171 (10–15) (2007) 701–729.
[13] E.J. Kim, S. Ordyniak, S. Szeider, Algorithms and complexity results for persuasive argumentation, in: P. Baroni, F. Cerutti, M. Giacomin, G.R. Simari
(Eds.), Computational Models of Argumentation, Proceedings of COMMA 2010, in: Frontiers in Artiﬁcial Intelligence and Applications, vol. 216, IOS,
2010, pp. 311–322.
[14] J. Bang-Jensen, G. Gutin, Digraphs: Theory, Algorithms, Applications, Springer Monographs in Mathematics, Springer-Verlag, London, 2001.
[15] P. Baroni, M. Giacomin, Semantics of abstract argument systems, in: I. Rahwan, G. Simari (Eds.), Argumentation in Artiﬁcial Intelligence, Springer-Verlag,
2009, pp. 25–44.
[16] E.C. Freuder, A suﬃcient condition for backtrack-bounded search, Journal of the ACM 32 (4) (1985) 755–761.
[17] R. Dechter, Bucket elimination: A unifying framework for reasoning, Artiﬁcial Intelligence 113 (1–2) (1999) 41–85.
[18] A. Darwiche, Recursive conditioning, Artiﬁcial Intelligence 126 (1–2) (2001) 5–41.
[19] G. Gottlob, R. Pichler, F. Wei, Bounded treewidth as a key to tractability of knowledge representation and reasoning, in: 21st National Conference on
Artiﬁcial Intelligence and the 18th Innovative Applications of Artiﬁcial Intelligence Conference, AAAI Press, 2006.
[20] W. Dvorák, R. Pichler, S. Woltran, Towards ﬁxed-parameter tractable algorithms for argumentation, in: F. Lin, U. Sattler, M. Truszczynski (Eds.), Principles
of Knowledge Representation and Reasoning: Proceedings of the Twelfth International Conference, KR 2010, Toronto, Ontario, Canada, May 9–13, 2010,
AAAI Press, 2010.
[21] H.L. Bodlaender, A tourist guide through treewidth, Acta Cybernetica 11 (1993) 1–21.
[22] B. Courcelle, Recognizability and second-order deﬁnability for sets of ﬁnite graphs, Tech. Rep. I-8634, Université de Bordeaux, 1987.
[23] J. Flum, M. Grohe, Parameterized Complexity Theory, Texts in Theoretical Computer Science. An EATCS Series, vol. XIV, Springer-Verlag, Berlin, 2006.
[24] M.R. Garey, D.R. Johnson, Computers and Intractability, W.H. Freeman and Company, New York, San Francisco, 1979.

