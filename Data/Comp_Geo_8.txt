Computational Geometry 48 (2015) 646–660

Contents lists available at ScienceDirect

Computational Geometry: Theory and
Applications
www.elsevier.com/locate/comgeo

Higher-order triangular-distance Delaunay graphs:
Graph-theoretical properties ✩
Ahmad Biniaz ∗ , Anil Maheshwari, Michiel Smid
School of Computer Science, Carleton University, Ottawa, Canada

a r t i c l e

i n f o

Article history:
Received 29 August 2014
Accepted 13 July 2015
Available online 21 July 2015
Keywords:
Triangular distance
Delaunay graph
Hamiltonian cycle
Matching

a b s t r a c t
We consider an extension of the triangular-distance Delaunay graphs (TD-Delaunay) on
a set P of points in general position in the plane. In TD-Delaunay, the convex distance
is deﬁned by a ﬁxed-oriented equilateral triangle , and there is an edge between two
points in P if and only if there is an empty homothet of
having the two points on
its boundary. We consider higher-order triangular-distance Delaunay graphs, namely k-TD,
which contains an edge between two points if the interior of the smallest homothet of
having the two points on its boundary contains at most k points of P . We consider the
connectivity, Hamiltonicity and perfect-matching admissibility of k-TD. Finally we consider
the problem of blocking the edges of k-TD.
© 2015 Elsevier B.V. All rights reserved.

1. Introduction
The triangular-distance Delaunay graph of a point set P in the plane, TD-Delaunay for short, was introduced by Chew
[12]. A TD-Delaunay is a graph whose convex distance function is deﬁned by a ﬁxed-oriented equilateral triangle. Let
be a downward equilateral triangle whose barycenter is the origin and one of whose vertices is on the negative y-axis.
A homothet of
is obtained by scaling
with respect to the origin by some factor μ ≥ 0, followed by a translation to
a point b in the plane: b + μ = {b + μa : a ∈ }. In the TD-Delaunay graph of P , there is a straight-line edge between
two points p and q if and only if there exists a homothet of
having p and q on its boundary and whose interior does
not contain any point of P . In other words, ( p , q) is an edge of TD-Delaunay graph if and only if there exists an empty
downward equilateral triangle having p and q on its boundary. In this case, we say that the edge ( p , q) has the empty
triangle property.
We say that P is in general position if the line passing through any two points from P does not make angles 0◦ , 60◦ , and
120◦ with horizontal. In this paper we consider point sets in general position and our results assume this pre-condition. If
P is in general position, then the TD-Delaunay graph is a planar graph, see [7]. We deﬁne t ( p , q) as the smallest homothet
of
having p and q on its boundary. See Fig. 1(a). Note that t ( p , q) has one of p and q at a vertex, and the other one on
the opposite side. Thus,
Observation 1. Each side of t ( p , q) contains either p or q.

✩

*

Research supported by NSERC.
Corresponding author.
E-mail address: ahmad.biniaz@gmail.com (A. Biniaz).

http://dx.doi.org/10.1016/j.comgeo.2015.07.003
0925-7721/© 2015 Elsevier B.V. All rights reserved.

A. Biniaz et al. / Computational Geometry 48 (2015) 646–660

647

Fig. 1. (a) Triangular-distance Delaunay graph (0-TD), (b) 1-TD graph, the light edges belong to 0-TD as well, and (c) Delaunay triangulation.

A graph G is connected if there is a path between any pair of vertices in G. Moreover, G is k-connected if there does not
exist a set of at most k − 1 vertices whose removal disconnects G. In case k = 2, G is called biconnected. In other words a
graph G is biconnected iff there is a simple cycle between any pair of its vertices. A matching in G is a set of edges in G
without common vertices. A perfect matching is a matching which matches all the vertices of G. A Hamiltonian cycle in G is
a cycle (i.e., closed loop) through G that visits each vertex of G exactly once. For H ⊆ G we denote the bottleneck of H , i.e.,
the length of the longest edge in H , by λ( H ).
Let K n ( P ) be a complete edge-weighted geometric graph on a point set P which contains a straight-line edge between
any pair of points in P . For an edge ( p , q) in K n ( P ) let w ( p , q) denote the weight of ( p , q). A bottleneck matching (resp.
bottleneck Hamiltonian cycle) in P is deﬁned to be a perfect matching (resp. Hamiltonian cycle) in K n ( P ), in which the weight
of the maximum-weight edge is minimized. A bottleneck biconnected spanning subgraph of P is a spanning subgraph, G ( P ),
of K n ( P ) which is biconnected and the weight of the longest edge in G ( P ) is minimized.
A tight lower bound on the size of a maximum matching in a TD-Delaunay graph, i.e. 0-TD, is presented in [4]. In
this paper we study higher-order TD-Delaunay graphs. The order-k TD-Delaunay graph of a point set P , denoted by k-TD, is a
geometric graph which has an edge ( p , q) iff the interior of t ( p , q) contains at most k points of P ; see Fig. 1(b). The standard
TD-Delaunay graph corresponds to 0-TD. We consider graph-theoretic properties of higher-order TD-Delaunay graphs, such
as connectivity, Hamiltonicity, and perfect-matching admissibility. We also consider the problem of blocking TD-Delaunay
graphs.
1.1. Previous work
A Delaunay triangulation (DT) of P (which does not have any four co-circular points) is a graph whose distance function
is deﬁned by a ﬁxed circle
centered at the origin. DT has an edge between two points p and q iff there exists a homothet
of
having p and q on its boundary and whose interior does not contain any point of P ; see Fig. 1(c). In this case the
edge ( p , q) is said to have the empty circle property. The order-k Delaunay Graph on P , denoted by k-DG, is deﬁned to have an
edge ( p , q) iff there exists a homothet of
having p and q on its boundary and whose interior contains at most k points
of P . The standard Delaunay triangulation corresponds to 0-DG.
For each pair of points p , q ∈ P let D [ p , q] be the closed disk having pq as diameter. A Gabriel Graph on P is a geometric
graph which has an edge between two points p and q iff D [ p , q] does not contain any point of P \ { p , q}. The order-k Gabriel
Graph on P , denoted by k-GG, is deﬁned to have an edge ( p , q) iff D [ p , q] contains at most k points of P \ { p , q}.
For each pair of points p , q ∈ P , let L ( p , q) be the intersection of the two open disks with radius | pq| centered at p and
q, where | pq| is the Euclidean distance between p and q. A Relative Neighborhood Graph on P is a geometric graph which
has an edge between two points p and q iff L ( p , q) does not contain any point of P . The order-k Relative Neighborhood Graph
on P , denoted by k-RNG, is deﬁned to have an edge ( p , q) iff L ( p , q) contains at most k points of P . It is obvious that for a
ﬁxed point set, k-RNG is a subgraph of k-GG, and k-GG is a subgraph of k-DG.
The problem of determining whether an order-k geometric graph always has a (bottleneck) perfect matching or a
(bottleneck) Hamiltonian cycle is of interest. In order to show the importance of this problem we provide the following
example. Gabow and Tarjan [15] showed that a bottleneck matching of maximum cardinality in a graph can be computed in
O (m · (n log n)0.5 ) time, where m is the number of edges in the graph. Using their algorithm, a bottleneck perfect matching
of a point set can be computed in O (n2 · (n log n)0.5 ) time; note that the complete graph on n points has (n2 ) edges. Chang
et al. [11] showed that a bottleneck perfect matching of a point set is contained in 16-DG; this graph has (n) edges and
can be computed in O (n log n) time. Thus, by running the algorithm of Gabow and Tarjan on 16-DG, a bottleneck perfect
matching of a point set can be computed in O (n · (n log n)0.5 ) time.
If for each edge ( p , q) in K n ( P ), w ( p , q) is equal the Euclidean distance between p and q, then Chang et al. [9–11]
proved that a bottleneck biconnected spanning graph, bottleneck perfect matching, and bottleneck Hamiltonian cycle of P
are contained in 1-RNG, 16-RNG, 19-RNG, respectively. This implies that 16-RNG has a perfect matching and 19-RNG is
Hamiltonian. Since k-RNG is a subgraph of k-GG, the same results hold for 16-GG and 19-GG. It is known that k-GG is (k +
1)-connected [8] and 10-GG (and hence 10-DG) is Hamiltonian [16]. Dillencourt showed that every Delaunay triangulation
(0-DG) admits a perfect matching [14] but it can fail to be Hamiltonian [13].

648

A. Biniaz et al. / Computational Geometry 48 (2015) 646–660

Fig. 2. The construction of the TD-Delaunay graph.

Given a geometric graph G ( P ) on a set P of n points, we say that a set K of points blocks G ( P ) if in G ( P ∪ K ) there
is no edge connecting two points in P . Actually P is an independent set in G ( P ∪ K ). Aichholzer et al. [2] considered the
problem of blocking the Delaunay triangulation (i.e. 0-DG) for a given point set P in which no four points are co-circular.
They show that 3n
points are suﬃcient to block 0-DG and n − 1 points are necessary. To block a Gabriel graph, n − 1 points
2
are suﬃcient [3].
In a companion paper, we considered the matching and blocking problems in higher-order Gabriel graphs. We showed
that 10-GG contains an Euclidean bottleneck matching and 8-GG may not have any. As for maximum matching, we proved a
2(n−1)
1
tight lower bound of n−
in 0-GG. We also showed that 1-GG has a matching of size at least
and 2-GG has a perfect
4
5
matching (when n is even). In addition, we showed that

n−1
3

points are necessary to block 0-TD and this bound is tight.

1.2. Our results
We consider some graph-theoretical properties of higher-order triangular distance Delaunay graphs on a given set P of
n points in general position in the plane. We show for which values of k, k-TD contains a bottleneck biconnected spanning
graph, a bottleneck Hamiltonian cycle, and a (bottleneck) perfect-matching; for the bottleneck structures we assume that
the weight of any edge ( p , q) in K n ( P ) is equal to the area of the smallest homothet of
having p and q on its boundary. In
Section 3 we prove that every k-TD graph is (k + 1)-connected. In addition we show that a bottleneck biconnected spanning
graph of P is contained in 1-TD. Using a similar approach as in [1,9], in Section 4 we show that a bottleneck Hamiltonian
cycle of P is contained in 7-TD. We also show a conﬁguration of a point set P such that 5-TD fails to have a bottleneck
Hamiltonian cycle. In Section 5 we prove that a bottleneck perfect matching of P is contained in 6-TD, and we show that
for some point set P , 5-TD does not have a bottleneck perfect matching. In Section 5.2 we prove that 2-TD has a perfect
matching and 1-TD has a matching of size at least 2(n5−1) . In Section 6 we consider the problem of blocking k-TD. We show
1
that at least n−
points are necessary and n − 1 points are suﬃcient to block a 0-TD. The open problems and concluding
2
remarks are presented in Section 7.

2. Preliminaries
Bonichon et al. [6] showed that the half- 6 graph of a point set P in the plane is equal to the TD-Delaunay graph of P .
They also showed that every plane triangulation is TD-Delaunay realizable.
The half- 6 graph (or equivalently a TD-Delaunay graph) on a point set P can be constructed in the following way. For
γ
each point p in P , let l p be the horizontal line through p. Deﬁne l p as the line obtained by rotating l p by γ -degrees in
0
120
counter-clockwise direction around p. Actually l p = l p . Consider three lines l0p , l60
which partition the plane into
p , and l p
six disjoint cones with apex p. Let C 1p , . . . , C 6p be the cones in counter-clockwise order around p as shown in Fig. 2. C 1p ,
C 3p , C 5p will be referred to as odd cones, and C 2p , C 4p , C 6p will be referred to as even cones. For each even cone C ip , connect
p to the “nearest” point q in C ip . The distance between p and q, d( p , q), is deﬁned as the Euclidean distance between p
and the orthogonal projection of q onto the bisector of C ip . See Fig. 2. The resulting graph is the half- 6 graph which is
deﬁned by even cones [6]. Moreover, the resulting graph is the TD-Delaunay graph deﬁned with respect to homothets of .
By considering the odd cones, another half- 6 graph is obtained. The well-known 6 graph is the union of half- 6 graphs
deﬁned by odd and even cones.
Recall that t ( p , q) is the smallest homothet of
having p and q on its boundary. In other words, t ( p , q) is the smallest
downward equilateral triangle through p and q. Similarly we deﬁne t ( p , q) as the smallest upward equilateral triangle having p and q on its boundary. It is obvious that the even cones correspond to downward triangles and odd cones correspond
to upward triangles. We deﬁne an order on the equilateral triangles: for each two equilateral triangles t 1 and t 2 we say that
t 1 ≺ t 2 if the area of t 1 is less than the area of t 2 . Since the area of t ( p , q) is directly related to d( p , q),

d( p , q) < d(r , s)

if and only if t ( p , q) ≺ t (r , s).

A. Biniaz et al. / Computational Geometry 48 (2015) 646–660

649

Fig. 3. Illustration of Observation 2: the point r is contained in t ( p , q). The triangles t ( p , r ) and t (q, r ) are inside t ( p , q).

For a set {t 1 , . . . , tm } of equilateral triangles we deﬁne max{t 1 , . . . , tm } to be the triangle with the largest area. As shown
in Fig. 3 we have the following observation:
Observation 2. If t ( p , q) contains a point r, then t ( p , r ) and t (q, r ) are contained in t ( p , q).
As a direct consequence of Observation 2, if a point r is contained in t ( p , q), then max{t ( p , r ), t (q, r )} ≺ t ( p , q). It is
obvious that,
Observation 3. For each two points p , q ∈ P , the area of t ( p , q) is equal to the area of t ( p , q).
Thus, we deﬁne X ( p , q) as a regular hexagon centered at p which has q on its boundary, and its sides are parallel to l0p ,
l60
p ,

and l120
p .

Observation 4. If X ( p , q) contains a point r, then t ( p , r ) ≺ t ( p , q).
We construct k-TD as follows. For each point p ∈ P , imagine the six cones having their apex at p, as described earlier.
Then connect p to its (k + 1) nearest neighbors in each even cone around p. For each edge ( p , q) in k-TD we deﬁne its
weight, w ( p , q), to be equal to the area of t ( p , q). The resulting graphs is k-TD, which has O (kn) edges. The k-TD can be
constructed in O (n log n + kn log log n)-time, using the algorithm introduced by Lukovszki [17] for computing fault tolerant
spanners.
For a graph G = ( V , E ) and K ⊆ V , let G − K be the subgraph obtained from G by removing the vertices in K , and let
o(G − K ) be the number of odd components in G − K . The following theorem by Tutte [18] gives a characterization of the
graphs which have a perfect matching:
Theorem 1. (Tutte [18].) G has a perfect matching if and only if o(G − K ) ≤ | K | for all K ⊆ V .
Berge [5] extended Tutte’s theorem to a formula (known as Tutte–Berge formula) for the maximum size of a matching
in a graph. In a graph G, the deﬁciency, defG ( K ), is o(G − K ) − | K |. Let def(G ) = max K ⊆ V defG ( K ).
Theorem 2 (Tutte–Berge formula). (Berge [5].) The size of a maximum matching in G is

1
2

(n − def(G )).

For an edge-weighted graph G we deﬁne the weight sequence of G, WS(G ), as the sequence containing the weights of the
edges of G in non-increasing order. For two graphs G 1 and G 2 we say that WS(G 1 ) ≺ WS(G 2 ) if WS(G 1 ) is lexicographically
smaller than WS(G 2 ). A graph G 1 is said to be less than a graph G 2 if WS(G 1 ) ≺ WS(G 2 ).
3. Connectivity
In this section we consider the connectivity of higher-order triangular-distance Delaunay graphs.
3.1. (k + 1)-connectivity
For a set P of points in the plane, the TD-Delaunay graph, i.e., 0-TD, is not necessarily a triangulation [12], but it
is connected and internally triangulated [4], i.e., all internal faces are triangles. As shown in Fig. 1(a), 0-TD may not be
biconnected. As a warm up exercise we show that every k-TD is (k + 1)-connected.

650

A. Biniaz et al. / Computational Geometry 48 (2015) 646–660

Theorem 3. For every point set P in general position in the plane, k-TD is (k + 1)-connected. In addition, for every k, there exists a
point set P such that k-TD is not (k + 2)-connected.
Proof. We prove the ﬁrst part of this theorem by contradiction. Let K be the set of (at most) k vertices removed from k-TD,
and let C = {C 1 , C 2 , . . . , C m }, where m > 1, be the resulting maximal connected components. Let T be the set of all triangles
deﬁned by any pair of points belonging to different components, i.e., T = {t (a, b) : a ∈ C i , b ∈ C j , i = j }. Consider the smallest
triangle t min ∈ T . Assume that t min is deﬁned by two points a and b, i.e., t min = t (a, b), where a ∈ C i , b ∈ C j , and i = j.
Claim 1: t min does not contain any point of P \ K in its interior. By contradiction, suppose that t min contains a point
c ∈ P \ K in its interior. Three cases arise: (i) c ∈ C i , (ii) c ∈ C j , (iii) c ∈ C l , where l = i and l = j. In case (i) the triangle t (c , b)
between C i and C j is contained in t (a, b). In case (ii) the triangle t (a, c ) between C i and C j is contained in t (a, b). In case
(iii) both triangles t (a, c ) and t (c , b) are contained in t (a, b). All cases contradict the minimality of t (a, b) = t min . Thus, t min
contains no point of P \ K in its interior, proving Claim 1.
By Claim 1, t min = t (a, b) may only contain points of K . Since | K | ≤ k, there must be an edge between a and b in k-TD.
This contradicts that a and b belong to different components C i and C j in C . Therefore, k-TD is (k + 1)-connected.
We present a constructive proof for the second part of theorem. Let P = A ∪ B ∪ K , where | A |, | B | ≥ 1 and | K | = k + 1.
Place the points of A in the plane. Let C 4A = p ∈ A C 4p . Place the points of K in C 4A . Let C 4K = p ∈ K C 4p . Place the points of B
in C 4K . Consider any pair (a, b) of points where a ∈ A and b ∈ B. It is obvious that any path between a and b in k-TD goes
through the vertices in K . Thus by removing the vertices in K , a and b become disconnected. Therefore, k-TD of P is not
(k + 2)-connected. ✷
3.2. Bottleneck biconnected spanning graph
As shown in Fig. 1(a), 0-TD may not be biconnected. By Theorem 3, 1-TD is biconnected. In this section we show that a
bottleneck biconnected spanning graph of P is contained in 1-TD.
Theorem 4. For every point set P in general position in the plane, 1-TD contains a bottleneck biconnected spanning graph of P .
Proof. Let G be the set of all biconnected spanning graphs with vertex set P . We deﬁne a total order on the elements of G
by their weight sequence. If two elements have the same weight sequence, we break the ties arbitrarily to get a total order.
Let G ∗ = ( P , E ) be a graph in G with minimal weight sequence. Clearly, G ∗ is a bottleneck biconnected spanning graph of P .
We will show that all edges of G ∗ are in 1-TD. By contradiction suppose that some edges in E do not belong to 1-TD, and
let e = (a, b) be the longest one (by the area of the triangle t (a, b)). If the graph G ∗ − {e } is biconnected, then by removing
e, we obtain a biconnected spanning graph G with WS(G ) ≺ WS(G ∗ ); this contradicts the minimality of G ∗ . Thus, there is a
pair { p , q} of points such that any cycle between p and q in G ∗ goes through e. Since (a, b) ∈
/ 1-TD, t (a, b) contains at least
two points of P , say x and y. Let G be the graph obtained from G ∗ by removing the edge (a, b) and adding the edges (a, x),
(b, x), (a, y ), (b, y ). We show that in G there is a cycle C between p and q which does not go through e. Consider a cycle
C ∗ in G ∗ between two points p and q (which goes through e). If none of x and y belong to C ∗ , then C = (C ∗ − {(a, b)}) ∪
{(a, x), (b, x)} is a cycle in G between p and q. If one of x or y, say x, belongs to C ∗ , then C = (C ∗ − {(a, b)}) ∪ {(a, y ), (b, y )}
is a cycle in G between p and q. If both x and y belong to C ∗ , w.l.o.g. assume that x is between b and y in the path
C ∗ − {(a, b)}. Consider the partition of C ∗ into four parts: (a) edge (a, b), (b) path δbx between b and x, (c) path δxy between
x and y, and (d) path δ ya between y and a. There are four cases:
1.
2.
3.
4.

None of p and q are
Both p and q are on
One of p , q is on δxy
One of p , q is on δxy

on δxy . Let C = δbx ∪ δ ya ∪ {(a, x), (b, y )}.
δxy . Let C = δxy ∪ {(a, x), (a, y )}.
while the other is on δbx . Let C = δbx ∪ δxy ∪ {(b, y )}.
while the other is on δ ya . Let C = δxy ∪ δ ya ∪ {(a, x)}.

In all cases, C is a cycle in G between p and q. Thus, between any pair of points in G there exists a cycle, and hence
G is biconnected. Since x and y are inside t (a, b), by Observation 2, max{t (a, x), t (a, y ), t (b, x), t (b, y )} ≺ t (a, b). Therefore,
WS(G ) ≺ WS(G ∗ ); this contradicts the minimality of G ∗ . ✷
4. Hamiltonicity
In this section we show that 7-TD contains a bottleneck Hamiltonian cycle. In addition, we will show that for some point
sets, 5-TD does not contain any bottleneck Hamiltonian cycle.
Theorem 5. For every point set P in general position in the plane, 7-TD contains a bottleneck Hamiltonian cycle.
Proof. Let H be the set of all Hamiltonian cycles through the points of P . Deﬁne a total order on the elements of H by
their weight sequence. If two elements have exactly the same weight sequence, break ties arbitrarily to get a total order. Let

A. Biniaz et al. / Computational Geometry 48 (2015) 646–660

651

Fig. 4. Illustration of Theorem 5.

H ∗ = a0 , a1 , . . . , an−1 , a0 be a cycle in H with minimal weight sequence. It is obvious that H ∗ is a bottleneck Hamiltonian
cycle of P . We will show that all the edges of H ∗ are in 7-TD. Consider any edge e = (ai , ai +1 ) in H ∗ and let t (ai , ai +1 ) be
the triangle corresponding to e (all the index manipulations are modulo n).
Claim 1: None of the edges of H ∗ can be completely in the interior t (ai , ai +1 ). Suppose there is an edge f = (a j , a j +1 )
inside t (ai , ai +1 ). Let H be a cycle obtained from H ∗ by deleting e and f , and adding (ai , a j ) and (ai +1 , a j +1 ). By Observation 2, t (ai , ai +1 ) max{t (ai , a j ), t (ai +1 , a j +1 )}, and hence WS( H ) ≺ WS( H ∗ ). This contradicts the minimality of H ∗ .
Therefore, we may assume that no edge of H ∗ lies completely inside t (ai , ai +1 ). Suppose there are w points of P inside
t (ai , ai +1 ). Let U = u 1 , u 2 , . . . , u w represent these points indexed in the order we would encounter them on H ∗ starting
from ai . Let R = {r1 , r2 , . . . , r w } represent the vertices where r i is the vertex succeeding u i in the cycle. All the vertices in
R, probably except r w , are different from ai (and ai +1 ). Without loss of generality assume that ai ∈ C a4i+1 , and t (ai , ai +1 ) is
anchored at ai +1 , as shown in Fig. 4.
Claim 2: For each r j ∈ R, t (r j , ai +1 ) max{t (ai , ai +1 ), t (u j , r j )}. Suppose there is a point r j ∈ R such that t (r j , ai +1 ) ≺ max
{t (ai , ai +1 ), t (u j , r j )}. Construct a new cycle H by removing the edges (u j , r j ), (ai , ai +1 ) and adding the edges (ai +1 , r j ) and
(ai , u j ). Since the two new edges have length strictly less than max{t (ai , ai +1 ), t (u j , r j )}, WS( H ) ≺ WS( H ∗ ); which is a
contradiction.
Claim 3: For each r j , rk ∈ R, t (r j , rk ) max{t (ai , ai +1 ), t (u j , r j ), t (uk , rk )}. Suppose there is a pair r j and rk such that
t (r j , rk ) ≺ max{t (ai , ai +1 ), t (u j , r j ), d(uk , rk )}. Construct a cycle H from H ∗ by ﬁrst deleting (u j , r j ), (uk , rk ), (ai , ai +1 ). This
results in three paths. One of the paths must contain both ai and either r j or rk . W.l.o.g. suppose that ai and rk are on the
same path. Add the edges (ai , u j ), (ai +1 , uk ), (r j , rk ). Since max{t (u j , r j ), t (uk , rk ), d(ai , ai +1 )} max{t (ai , u j ), t (ai +1 , uk ),
t (r j , rk )}, WS( H ) ≺ WS( H ∗ ); we get a contradiction.
We use Claim 2 and Claim 3 to show that the size of R is at most seven, and consequently w ≤ 7. Consider the lines
la0i+1 , la60i+1 , la120
, and la120
as shown in Fig. 4. Let l1 and l2 be the rays starting at the corners of t (ai , ai +1 ) opposite to ai +1
i +1
i

and parallel to la0i+1 and la60i+1 respectively. These lines and rays partition the plane into 12 regions, as shown in Fig. 4. We
will show that each of the regions D 1 , D 2 , D 3 , D 4 , C 1 , C 2 , and B = B 1 ∪ B 2 contains at most one point of R, and the other
regions do not contain any point of R. Consider the hexagon X (ai +1 , ai ). By Claim 2 and Observation 4, no point of R can
be inside X (ai +1 , ai ). Moreover, no point of R can be inside the cones A 1 , A 2 , or A 3 , because if r j ∈ { A 1 ∪ A 2 ∪ A 3 }, the
(upward) triangle t (u j , r j ) contains ai +1 . Then by Observation 4, t (r j , ai +1 ) ≺ t (u j , r j ); which contradicts Claim 2.
We show that each of the regions D 1 , D 2 , D 3 , D 4 contains at most one point of R. Consider the region D 1 ; by similar
reasoning we can prove the claim for D 2 , D 3 , D 4 . Using contradiction, let r j and rk be two points in D 1 , and w.l.o.g. assume
that r j is the farthest to la60i+1 . Then rk can lie inside any of the cones C r1j , C r5j , and C r6j (but not in X ). If rk ∈ C r1j , then

t (r j , rk ) is smaller than t (ai , ai +1 ) which means that t (r j , rk ) ≺ t (ai , ai +1 ). If rk ∈ C r5j , then t (u j , r j ) contains rk , that is
t (r j , rk ) ≺ t (u j , r j ). If rk ∈ C r6j , then t (u j , r j ) contains rk , that is t (r j , rk ) ≺ t (u j , r j ). All cases contradict Claim 3.
Now consider the region C 1 (or C 2 ). By contradiction assume that it contains two points r j and rk . Let r j be the farthest
from la0i+1 . It is obvious that t (u j , r j ) contains rk , that is t (r j , rk ) ≺ t (u j , r j ); which contradicts Claim 3.

652

A. Biniaz et al. / Computational Geometry 48 (2015) 646–660

Fig. 5. t (ai , ai +1 ) contains 7 points while the conditions in the proof of Theorem 5 hold.

Consider the region B = B 1 ∪ B 2 . Note that it is possible for r j or rk to be ai . If both r j and rk belong to B 2 , then t (r j , rk )
is smaller that t (ai , ai +1 ). If r j ∈ B 1 and rk ∈ B 2 , then t (u j , r j ) contains rk , and hence t (r j , rk ) ≺ t (u j , r j ). If both r j and rk
belong to B 1 , let r j be the farthest from la120
. Clearly, t (u j , r j ) contains rk and hence t (r j , rk ) ≺ t (u j , r j ). All cases contradict
i
Claim 3.
Therefore, any of the regions D 1 , D 2 , D 3 , D 4 , C 1 , C 2 , and B = B 1 ∪ B 2 contains at most one point of R. Thus, | R | ≤ 7 and
w ≤ 7, and t (ai , ai +1 ) contains at most 7 points of P . Therefore, e = (ai , ai +1 ) is an edge of 7-TD. ✷
As a direct consequence of Theorem 5 we have shown that:
Corollary 1. 7-TD is Hamiltonian.
An interesting question is to determine if k-TD contains a bottleneck Hamiltonian cycle for k < 7. Fig. 5 shows a conﬁguration where t (ai , ai +1 ) contains 7 points while the conditions of Claim 1, Claim 2, and Claim 3 in the proof of Theorem 5
hold. In Fig. 5, d(ai , ai +1 ) = 1, d(r i , u i ) = 1 + , d(r i , r j ) > 1 + , d(r i , ai +1 ) > 1 + for i , j = 1, . . . 7 and i = j.
Theorem 6. There exists an arbitrary large point set such that its 5-TD does not contain any bottleneck Hamiltonian cycle.
Proof. In order to prove the theorem, we provide such a point set. Fig. 6 shows a conﬁguration of P with 17 points such that
5-TD does not contain a bottleneck Hamiltonian cycle. In Fig. 6, d(a, b) = 1 and t (a, b) contains 6 points U = {u 1 , . . . , u 6 }.
In addition d(r i , u i ) = 1 + , d(r i , r j ) > 1 + , d(r i , b) > 1 + for i , j = 1, . . . , 6 and i = j. Let R = {t 1 , t 2 , t 3 , r1 , . . . , r6 }.
The dashed hexagons are centered at a and b and have diameter 1. The dotted hexagons are centered at vertices in
R and have diameter 1 + . Each point in R is connected to its ﬁrst and second closest points by edges of length
1+
(the bold edges). Let B be the set of these edges. Let H be a cycle formed by B ∪ {(u 3 , b), (b, a), (a, u 5 )},
i.e., H = (u 4 , r4 , u 5 , r5 , u 6 , r6 , t 1 , t 2 , t 3 , r1 , u 1 , r2 , u 2 , r3 , u 3 , a, b, u 4 ). It is obvious that H is a Hamiltonian cycle for P and
λ( H ) = 1 + . Thus, the bottleneck of any bottleneck Hamiltonian cycle for P is at most 1 + . We will show that any
bottleneck Hamiltonian cycle for P contains the edge (a, b) which does not belong to 5-TD. By contradiction, let H ∗ be a
bottleneck Hamiltonian cycle which does not contain (a, b). In H ∗ , b is connected to two vertices bl and br , where bl = a
and br = a. Since the distance between b and any vertex in R is strictly bigger than 1 + and λ( H ∗ ) ≤ 1 + , bl ∈
/ R and
br ∈
/ R. Thus bl and br belong to U . Let U = {u 1 , u 2 , u 5 , u 6 }. Consider two cases:

• bl ∈ U or br ∈ U . W.l.o.g. assume that bl ∈ U and bl = u 1 . Since u 1 is the ﬁrst/second closest point of r1 and r2 , in H ∗
one of r1 and r2 must be connected by an edge e to a point that is farther than its second closet point; e has length
strictly greater than 1 + .

A. Biniaz et al. / Computational Geometry 48 (2015) 646–660

653

Fig. 6. The points {r1 , . . . , r6 , t 1 , t 2 , t 3 } are connected to their ﬁrst and second closest point (the bold edges). The edge (a, b) should be in any bottleneck
Hamiltonian cycle, while t (a, b) contains 6 points.

• bl ∈
/ U and br ∈
/ U . Thus, both bl and br belong to {u 3 , u 4 }. That is, in H ∗ , a should be connected to a point c where
c ∈ R ∪ U . If c ∈ R then the edge (a, c ) has length more than 1 + . If c ∈ U , w.l.o.g. assume c = u 1 ; by the same
argument as in the previous case, one of r1 and r2 must be connected by an edge e to a point that is farther than its
second closet point; e has length strictly greater than 1 + .
Since e ∈ H ∗ , both cases contradicts that λ( H ∗ ) ≤ 1 + . Therefore, every bottleneck Hamiltonian cycle contains edge
(a, b). Since (a, b) is not an edge in 5-TD, a bottleneck Hamiltonian cycle of P is not contained in 5-TD. We can construct
larger point sets by adding new points very close to t 2 , and at distance at least 1 + 2 from b. ✷
5. Perfect matching admissibility
In this section we consider the matching problem in higher-order triangular-distance Delaunay graphs. In Subsection 5.1
we show that 6-TD contains a bottleneck perfect matching. We also show that for some point sets P , 5-TD does not contain
any bottleneck perfect matching. In Subsection 5.2 we prove that every 2-TD has a perfect matching when P has an even
2(n−1)
number of points, and 1-TD contains a matching of size at least
.
5
5.1. Bottleneck perfect matching
Theorem 7. For a set P of an even number of points in general position in the plane, 6-TD contains a bottleneck perfect matching.
Proof. Let M be the set of all perfect matchings through the points of P . Deﬁne a total order on the elements of M by
their weight sequence. If two elements have exactly the same weight sequence, break ties arbitrarily to get a total order.
Let M ∗ = {(a1 , b1 ), . . . , (a n , b n )} be a perfect matching in M with minimal weight sequence. It is obvious that M ∗ is a
2
2
bottleneck perfect matching for P . We will show that all edges of M ∗ are in 6-TD. Consider any edge e = (ai , b i ) in M ∗ and
its corresponding triangle t (ai , b i ).
Claim 1: None of the edges of M ∗ can be inside t (ai , b i ). Suppose there is an edge f = (a j , b j ) inside t (ai , b i ). Let M be
a perfect matching obtained from M ∗ by deleting {e , f }, and adding {(ai , a j ), (b i , b j )}. By Observation 2, the two new edges
are smaller than the old ones. Thus, WS( M ) ≺ WS( M ∗ ) which contradicts the minimality of M ∗ .
Therefore, we may assume that no edge of M ∗ lies completely inside t (ai , b i ). Suppose there are w points of P inside t (ai , b i ). Let U = u 1 , u 2 , . . . , u w represent the points inside t (ai , b i ), and R = r1 , r2 , . . . , r w represent the points where
(r i , u i ) ∈ M ∗ . W.l.o.g. assume that ai ∈ C b4 , and t (ai , bi ) is anchored at bi as shown in Fig. 7.
i

654

A. Biniaz et al. / Computational Geometry 48 (2015) 646–660

Fig. 7. Proof of Theorem 7.

Claim 2: For each r j ∈ R, min{t (r j , ai ), t (r j , b i )} max{t (ai , b i ), t (u j , r j )}. Otherwise, by a similar argument as in the proof
of Claim 2 in Theorem 5 we can either match r j with ai or b i to obtain a smaller matching M; which is a contradiction.
Claim 3: For each pair r j and rk of points in R, t (r j , rk ) max{t (ai , b i ), t (r j , u j ), t (rk , uk )}. The proof is similar to the proof
of Claim 3 in Theorem 5.
Consider Fig. 7 which partitions the plane into eleven regions. As a direct consequence of Claim 2, the hexagons X (b i , ai )
and X (ai , b i ) do not contain any point of R. By a similar argument as in the proof of Theorem 5, the regions A 1 , A 2 , A 3
do not contain any point of R. In addition, the region B does not contain any point r j of R, because otherwise t (r j , u j )
contains ai , that is t (r j , ai ) ≺ t (u j , r j ) which contradicts Claim 2. As shown in the proof of Theorem 5 each of the regions
D 1 , D 2 , D 3 , D 4 , C 1 , and C 2 contains at most one point of R (note that D 3 ⊂ D 3 and D 4 ⊂ D 4 ). Thus, w ≤ 6, and t (ai , b i )
contains at most 6 points of P . Therefore, e = (ai , b i ) is an edge of 6-TD. ✷
As a direct consequence of Theorem 7 we have shown that:
Corollary 2. For a set P of even number of points in general position in the plane, 6-TD has a perfect matching.
In the following theorem, we show that the bound k = 6 proved in Theorem 7 is tight.
Theorem 8. There exists an arbitrarily large point set such that its 5-TD does not contain any bottleneck perfect matching.
Proof. In order to prove the theorem, we provide such a point set. Fig. 8 shows a conﬁguration of a set P with 14 points
such that d(a, b) = 1 and t (a, b) contains six points U = {u 1 , . . . , u 6 }. In addition d(r i , u i ) = 1 + , d(r i , x) > 1 + where
x = u i , for i = 1, . . . , 6. Let R = {r1 , . . . , r6 }. In Fig. 8, the dashed hexagons are centered at a and b, each of diameter 1, and
the dotted hexagons centered at vertices in R, each of diameter 1 + . Consider a perfect matching M = {(a, b)} ∪ {(r i , u i ) :
i = 1, . . . , 6} where each point r i ∈ R is matched to its closest point u i . It is obvious that λ( M ) = 1 + , and hence the
bottleneck of any bottleneck perfect matching is at most 1 + . We will show that any bottleneck perfect matching for P
contains the edge (a, b) which does not belong to 5-TD. By contradiction, let M ∗ be a bottleneck perfect matching which
does not contain (a, b). In M ∗ , b is matched to a point c ∈ R ∪ U . If c ∈ R, then d(b, c ) > 1 + . If c ∈ U , w.l.o.g. assume
c = u 1 . Thus, in M ∗ the point r1 is matched to a point d where d = u 1 . Since u 1 is the unique closest point to r1 and
d(r1 , u 1 ) = 1 + , d(r1 , d) > 1 + . Both cases contradicts that λ( M ∗ ) ≤ 1 + . Therefore, every bottleneck perfect matching
contains (a, b). Since (a, b) is not an edge in 5-TD, a bottleneck perfect matching of P is not contained in 5-TD. We can
construct larger point sets by adding new points—which are within distance 1 + from each other—at distance at least
1 + 2 from the current point set. ✷
5.2. Perfect matching
In [4] the authors proved a tight lower bound of
2(n−1)
5

n−1
3

on the size of a maximum matching in 0-TD. In this section we

prove that 1-TD has a matching of size
and 2-TD has a perfect matching when P has an even number of points.
For a triangle t (a, b) through the points a and b, let top(a, b), left(a, b), and right(a, b) respectively denote the top, left,
and right sides of t (a, b). Refer to Fig. 9(a) for the following lemma.

A. Biniaz et al. / Computational Geometry 48 (2015) 646–660

655

Fig. 8. The points {r1 , . . . , r6 } are matched to their closest point. The edge (a, b) should be an edge in any bottleneck perfect matching, while t (a, b) contains
6 points.

Fig. 9. (a) Illustration of Lemma 1, and (b) proof of Lemma 1.

Lemma 1. Let t (a, b) and t ( p , q) intersect a horizontal line , and t (a, b) intersects top( p , q) in such a way that t ( p , q) contains the
lowest corner of t (a, b). Let a (resp. p) lie on right(a, b) (resp. right( p , q). If a and b lie above top( p , q), and p and q lie above , then,
max{t (a, p ), t (b, q)} ≺ max{t (a, b), t ( p , q)}.
Proof. Recall that t (a, b) is the smallest downward triangle through a and b. By Observation 1 each side of t (a, b) contains
either a or b. In Fig. 9(a) the set of potential positions for point a on the boundary of t (a, b) is shown by the line segment
sa ; and similarly by sb , s p , sq for b, p, q, respectively. We will show that t (a, p ) ≺ max{t (a, b), t ( p , q)}. By similar reasoning
we can show that t (b, q) ≺ max{t (a, b), t ( p , q)}. Let x denote the intersection of and right( p , q). Consider a ray r initiated
at x and parallel to left( p , q) which divides sa into (at most) two parts sa and sa as shown in Fig. 9(b). Two cases may
appear:

• a ∈ sa . Let t 1 be a downward triangle anchored at x which has its top side on the line through top(a, b) (the dashed
triangle in Fig. 9(b)). The top side of t 1 and t (a, b) lie on the same horizontal line. The bottommost corner of t 1 is on

656

A. Biniaz et al. / Computational Geometry 48 (2015) 646–660

Fig. 10. Two possible conﬁgurations: (a) t 3 ≺top t 2 ≺top t 1 , (b) t 4 ≺top t 1 , t 4 ≺left t 2 , t 4 ≺right t 3 .

while the bottommost corner of t (a, b) is below . Thus, t 1 ≺ t (a, b). In addition, t 1 contains sa and s p , thus, for any
two points a ∈ sa and p ∈ s p , t (a, p ) t 1 . Therefore, t (a, p ) ≺ t (a, b).
• a ∈ sa . Let t 2 be a downward triangle anchored at the intersection of right(a, b) and top( p , q) which has one side on
the line through right( p , q) (the dotted triangle in Fig. 9(b)). This triangle is contained in t ( p , q), and has s p on its right
side. If we slide t 2 upward while its top-left corner remains on sa , the segment s p remains on the right side of t 2 . Thus,
any triangle connecting a point a ∈ sa to a point p ∈ s p has the same size as t 2 . That is, t (a, p ) = t 2 ≺ t ( p , q).
Therefore, we have t (a, p ) ≺ max{t (a, b), t ( p , q)}. By similar argument we conclude that t (b, q) ≺ max{t (a, b), t ( p , q)}.

✷

Let P = { P 1 , P 2 , . . .} be a partition of the points in P . Let G (P ) be the complete graph with vertex set P . For each edge
e = ( P i , P j ) in G (P ), let w (e ) be equal to the area of the smallest triangle between a point in P i and a point in P j , i.e.
w (e ) = min{t (a, b) : a ∈ P i , b ∈ P j }. That is, the weight of an edge e ∈ G (P ) corresponds to the size of the smallest triangle
t (e ) deﬁned by the endpoints of e. Let T be a minimum spanning tree of G (P ). Let T be the set of triangles corresponding
to the edges of T , i.e. T = {t (e ) : e ∈ T }.
Lemma 2. The interior of any triangle in T does not contain any point of P .
Proof. By contradiction, suppose there is a triangle τ ∈ T which contains a point c ∈ P . Let e = ( P i , P j ) be the edge in T
which corresponds to τ . Let a and b respectively be the points in P i and P j which deﬁne τ , i.e. τ = t (a, b) and w (e ) =
t (a, b). Three cases arise: (i) c ∈ P i , (ii) c ∈ P j , (iii) c ∈ P l where l = i and l = j. In case (i) the triangle t (c , b) between c ∈ P i
and b ∈ P j is smaller than t (a, b); contradicts that w (e ) = t (a, b) in G (P ). In case (ii) the triangle t (a, c ) between a ∈ P i and
c ∈ P j is smaller than t (a, b); contradicts that w (e ) = t (a, b) in G (P ). In case (iii) the triangle t (a, c ) (resp. t (c , b)) between
P i and P l (resp. P l and P j ) is smaller than t (a, b); contradicts that e is an edge in T . ✷
Lemma 3. Each point in the plane can be in the interior of at most three triangles in T .
Proof. For each t (a, b) ∈ T , the sides top(a, b), right(a, b), and left(a, b) contains at least one of a and b. In addition, by
Lemma 2, t (a, b) does not contain any point of P in its interior. Thus, none of top(a, b), right(a, b), and left(a, b) is completely
inside the other triangles. Therefore, the only possible way that two triangles t (a, b) and t ( p , q) can share a point is that
one triangle, say t ( p , q), contains a corner of t (a, b) in such a way that a and b are outside t ( p , q). In other words t (a, b)
intersects t ( p , q) through one of the sides top( p , q), right( p , q), or left( p , q). If t (a, b) intersects t ( p , q) through a direction
d ∈ {top, right, left} we say that t ( p , q) ≺d t (a, b).
By contradiction, suppose there is a point c in the plane which is inside four triangles {t 1 , t 2 , t 3 , t 4 } ⊆ T . Out of these
four, either (i) three of them are like t i ≺d t j ≺d tk or (ii) there is a triangle tl such that tl ≺top t i , tl ≺right t j , tl ≺left tk , where
1 ≤ i , j , k, l ≤ 4 and i = j = k = l. Fig. 10 shows the two possible conﬁgurations (note that all other conﬁgurations obtained
by changing the indices of triangles and/or the direction are symmetric to Fig. 10(a) or Fig. 10(b)).
Recall that each of t 1 , t 2 , t 3 , t 4 corresponds to an edge in T . In the conﬁguration of Fig. 10(a) consider t 1 , t 2 , and
top(t 3 ) which is shown in more detail in Fig. 11(a). Suppose t 1 (resp. t 2 ) is deﬁned by points a and b (resp. p and q). By
Lemma 2, p and q are above top(t 3 ), a and b are above top(t 2 ). By Lemma 1, max{t (a, p ), t (b, q)} ≺ max{t (a, b), t ( p , q)}. This
contradicts the fact that both of the edges representing t (a, b) and t ( p , q) are in T , because by replacing max{t (a, b), t ( p , q)}
with t (a, p ) or t (b, q), we obtain a tree T which is smaller than T . In the conﬁguration of Fig. 10(b), consider all pairs of
potential positions for two points deﬁning t 4 which is shown in more detail in Fig. 11(b). The pairs of potential positions on
the boundary of t 4 are shown in red, green, and orange. Consider the red pair, and look at t 2 , t 4 , and left(t 1 ). By Lemma 1
and the same reasoning as for the previous conﬁguration, we obtain a smaller tree T ; which contradicts the minimality of

A. Biniaz et al. / Computational Geometry 48 (2015) 646–660

657

Fig. 11. Illustration of Lemma 3.

T . By symmetry, the green and orange pairs lead to a contradiction. Therefore, all conﬁgurations are invalid; which proves
the lemma. ✷
Our results in this section are based on Lemma 2, Lemma 3, Theorem 1, and Theorem 2.
Now we prove that 2-TD has a perfect matching.
Theorem 9. For a set P of an even number of points in general position in the plane, 2-TD has a perfect matching.
Proof. First we show that by removing a set K of k points from 2-TD, at most k + 1 components are generated. Then
we show that at least one of these components must be even. Finally by Theorem 1 we conclude that 2-TD has a perfect
matching.
Let K be a set of k vertices removed from 2-TD, and let C = {C 1 , . . . , C m(k) } be the resulting m(k) components, where m
is a function depending on k. Actually C = 2-TD − K and P = { V (C 1 ), . . . , V (C m(k) )} is a partition of the vertices in P \ K .
Claim 1: m(k) ≤ k + 1. Let G (P ) be the complete graph with vertex set P which is constructed as described above. Let T
be a minimum spanning tree of G (P ) and let T be the set of triangles corresponding to the edges of T . It is obvious that
T contains m(k) − 1 edges and hence | T | = m(k) − 1. Let F = {( p , t ) : p ∈ K , t ∈ T , p ∈ t } be the set of all (point, triangle)
pairs where p ∈ K , t ∈ T , and p is inside t. By Lemma 3 each point in K can be inside at most three triangles in T . Thus,
| F | ≤ 3 · | K |. Now we show that each triangle in T contains at least three points of K . Consider any triangle τ ∈ T . Let
e = ( V (C i ), V (C j )) be the edge of T which is corresponding to τ , and let a ∈ V (C i ) and b ∈ V (C j ) be the points deﬁning τ .
By Lemma 2, τ does not contain any point of P \ K in its interior. Therefore, τ contains at least three points of K , because
otherwise (a, b) is an edge in 2-TD which contradicts the fact that a and b belong to different components in C . Thus, each
triangle in T contains at least three points of K in its interior. That is, 3 · | T | ≤ | F |. Therefore, 3(m(k) − 1) ≤ | F | ≤ 3k, and
hence m(k) ≤ k + 1.
Claim 2: o(C ) ≤ k. By Claim 1, |C | = m(k) ≤ k + 1. If |C | ≤ k, then o(C ) ≤ k. Assume that |C | = k + 1. Since P = K ∪
{ ki =+11 V (C i )}, the total number of vertices of P can be deﬁned as n = k + ki =+11 | V (C i )|. Consider two cases where (i) k is
odd, (ii) k is even. In both cases if all the components in C are odd, then n is odd; this contradicts our assumption that P
has an even number of vertices. Thus, C contains at least one even component, which implies that o(C ) ≤ k.
Finally, by Claim 2 and Theorem 1, we conclude that 2-TD has a perfect matching. ✷
Theorem 10. For every set P of points in general position in the plane, 1-TD has a matching of size

2(n−1)
.
5

Proof. Let K be a set of k vertices removed from 1-TD, and let C = {C 1 , . . . , C m(k) } be the resulting m(k) components.
Actually C = 1-TD − K and P = { V (C 1 ), . . . , V (C m(k) )} is a partition of the vertices in P \ K . Note that o(C ) ≤ m(k). Let M ∗
be a maximum matching in 1-TD. By Theorem 2,

1

| M ∗ | = (n − def(1-TD)),
2

(1)

where

def(1-TD) = max(o(C ) − | K |)
K ⊆P

≤ max(|C | − | K |)
K ⊆P

= max (m(k) − k).
0≤k≤n

(2)

658

A. Biniaz et al. / Computational Geometry 48 (2015) 646–660

Deﬁne G (P ), T , T , and F as in the proof of Theorem 9. By Lemma 3, | F | ≤ 3 · | K |. By the same reasoning as in the proof of
Theorem 9, each triangle in T has at least two points of K in its interior. Thus, 2 · | T | ≤ | F |. Therefore, 2(m(k) − 1) ≤ | F | ≤ 3k,
and hence

m(k) ≤

3k
2

+ 1.

(3)

In addition, k + m(k) = | K | + |C | ≤ | P | = n, and hence

m(k) ≤ n − k.

(4)

By Inequalities (3) and (4),

m(k) ≤ min{

3k
2

+ 1, n − k}.

(5)

Thus, by (2) and (5)

def(1-TD) ≤ max (m(k) − k)
0≤k≤n

≤ max {min{
0≤k≤n

3k
2

+ 1, n − k } − k }

k

= max {min{ + 1, n − 2k}}
2

0≤k≤n

=

n+4
5

(6)

,

where the last equation is achieved by setting
Equation (1) we have

|M ∗ | ≥

2(n − 1)
5

.

k
2

+ 1 equal to n − 2k, which implies k =

2(n−1)
.
5

Finally by substituting (6) in

✷

6. Blocking TD-Delaunay graphs
In this section we consider the problem of blocking TD-Delaunay graphs. Let P be a set of n points in the plane such that
no pair of points of P is collinear in the l0 , l60 , and l120 directions. Recall that a point set K blocks k-TD( P ) if in k-TD( P ∪ K )
there is no edge connecting two points in P . That is, P is an independent set in k-TD( P ∪ K ).
n−1)
Theorem 11. At least (k+1)(
points are necessary to block k-TD( P ).
3

Proof. Let K be a set of m points which blocks k-TD( P ). Let G (P ) be the complete graph with vertex set P = P . Let T
be a minimum spanning tree of G (P ) and let T be the set of triangles corresponding to the edges of T . It is obvious that
| T | = n − 1. By Lemma 2 the triangles in T are empty, thus, the edges of T belong to any k-TD( P ) where k ≥ 0. To block
each edge, corresponding to a triangle in T , at least k + 1 points are necessary. By Lemma 3 each point in K can lie in at
(k+1)(n−1)
(k+1)(n−1)
most three triangles of T . Therefore, m ≥
, which implies that at least
points are necessary to block
3
3
all the edges of T and hence k-TD( P ). ✷
Theorem 11 gives a lower bound on the number of points that are necessary to block a TD-Delaunay graph. By this
2(n−1)
1
theorem, at least n−
,
, n − 1 points are necessary to block 0-, 1-, 2-TD( P ) respectively. Now we introduce
3
3
another formula which gives a better lower bound for 0-TD. For a point set P , let νk ( P ) and αk ( P ) respectively denote the
size of a maximum matching and a maximum independent set in k-TD( P ). For every edge in the maximum matching, at
most one of its endpoints can be in the maximum independent set. Thus,

αk ( P ) ≤ | P | − νk ( P ).

(7)

Let K be a set of m points which blocks k-TD( P ). By deﬁnition there is no edge between points of P in k-TD( P ∪ K ). That
is, P is an independent set in k-TD( P ∪ K ). Thus,

n ≤ αk ( P ∪ K ).

(8)

By (7) and (8) we have

n ≤ αk ( P ∪ K ) ≤ (n + m) − νk ( P ∪ K ).

(9)

A. Biniaz et al. / Computational Geometry 48 (2015) 646–660

Fig. 12. (a) A 0-TD graph which is shown in bold edges is blocked by

Theorem 12. At least

n−1
2

n−1
2

white points, (b) p i blocks all the edges connecting p i to the vertices above l0p i .

points are necessary to block 0-TD( P ).

Proof. Let K be a set of m points which blocks 0-TD( P ). Consider 0-TD( P ∪ K ). It is known that
see [4]. By Inequality (9),

n+m−1

n ≤ (n + m) −

3

and consequently m ≥

659

n−1
2

≤

2(n + m) + 1
3

ν0 ( P ∪ K ) ≥

n+m−1
3

;

,

(note that m is an integer number).

✷

Fig. 12(a) shows a 0-TD graph on a set of 12 points which is blocked by 6 points. By removing the topmost point we
obtain a set with odd number of points which can be blocked by 5 points. Thus, the lower bound provided by Theorem 12
is tight.
2((n+m)−1)
Now let k = 1. By Theorem 10 we have ν1 ( P ∪ K ) ≥
, and by Inequality (9)
5

n ≤ (n + m) −

2((n + m) − 1)
5

=

3(n + m) + 2
5

,

2(n−1)

and consequently m ≥
; the same lower bound as in Theorem 11.
3
Now let k = 2. By Theorem 9 we have ν2 ( P ∪ K ) = n+2m (note that n + m may be odd). By Inequality (9)

n ≤ (n + m) −

n+m
2

=

n+m
2

,

and consequently m ≥ n, where n + m is even, and m ≥ n − 1, where n + m is odd.
Theorem 13. There exists a set K of n − 1 points that blocks 0-TD( P ).
Proof. Let d0 ( p , q) be the Euclidean distance between l0p and lq0 . Let δ = min{d0 ( p , q) : p , q ∈ P }. For each point p ∈ P let
p (x) and p ( y ) respectively denote the x and y coordinates of p in the plane. Let p 1 , . . . , pn be the points of P in the
increasing order of their y-coordinate. Let K = { p i : p i (x) = p i (x), p i ( y ) = p i ( y ) + , < δ, 1 ≤ i ≤ n − 1}. See Fig. 12(b). For
each point p i , let E p i (resp. E p i ) denote the edges of 0-TD( P ) between p i and the points above l0p i (resp. below l0p i ). It is
easy to see that the downward triangle between p i and any point q above l0p i (i.e. any point q ∈ C 1p i ∪ C 2p i ∪ C 3p i ) contains p i .

Thus, p i blocks all the edges in E p i . In addition, the edges in E p i are blocked by p 1 , . . . , p i −1 . Therefore, all the edges of
0-TD( P ) are blocked by the n − 1 points in K . ✷
We can extend the result of Theorem 13 to k-TD( P ) where k ≥ 1. For each point p i we put k + 1 copies of p i very close
to p i . Thus,
Theorem 14. There exists a set K of (k + 1)(n − 1) points that blocks k-TD( P ).
This bound is tight. Consider the case where k = 0. In this case 0-TD( P ) can be a path representing n − 1 disjoint triangles
and for each triangle we need at least one point to block its corresponding edge.

660

A. Biniaz et al. / Computational Geometry 48 (2015) 646–660

7. Conclusion
In this paper, we considered some combinatorial properties of higher-order triangular-distance Delaunay graphs of a
point set P . We proved that

•
•
•
•
•
•
•
•

is (k + 1) connected.
contains a bottleneck biconnected spanning graph of P .
contains a bottleneck Hamiltonian cycle and 5-TD may not have any.
contains a bottleneck perfect matching and 5-TD may not have any.
has a matching of size at least 2(n5−1) .
has a perfect matching when P has an even number of points.
n−1
points are necessary to block 0-TD.
2

k-TD
1-TD
7-TD
6-TD
1-TD
2-TD

(k+1)(n−1)
3

points are necessary and (k + 1)(n − 1) points are suﬃcient to block k-TD.

We leave a number of open problems:

• What is a tight lower bound for the size of maximum matching in 1-TD?
• Does 6-TD contain a bottleneck Hamiltonian cycle?
• As shown in Fig. 1(a) 0-TD may not have a Hamiltonian cycle. For which values of k = 1, . . . , 6, is the graph k-TD
Hamiltonian?
References
[1] M. Abellanas, P. Bose, J. García-López, F. Hurtado, C.M. Nicolás, P. Ramos, On structural and graph theoretic properties of higher order Delaunay graphs,
Int. J. Comput. Geom. Appl. 19 (6) (2009) 595–615.
[2] O. Aichholzer, R.F. Monroy, T. Hackl, M.J. van Kreveld, A. Pilz, P. Ramos, B. Vogtenhuber, Blocking Delaunay triangulations, Comput. Geom. 46 (2) (2013)
154–159.
[3] B. Aronov, M. Dulieu, F. Hurtado, Witness Gabriel graphs, Comput. Geom. 46 (7) (2013) 894–908.
[4] J. Babu, A. Biniaz, A. Maheshwari, M. Smid, Fixed-orientation equilateral triangle matching of point sets, Theor. Comput. Sci. 555 (2014) 55–70.
[5] C. Berge, Sur le couplage maximum d’un graphe, C. R. Acad. Sci. Paris 247 (1958) 258–259.
[6] N. Bonichon, C. Gavoille, N. Hanusse, D. Ilcinkas, Connections between theta-graphs, Delaunay triangulations, and orthogonal surfaces, in: WG, 2010,
pp. 266–278.
[7] P. Bose, P. Carmi, S. Collette, M.H.M. Smid, On the stretch factor of convex Delaunay graphs, J. Comput. Geom. 1 (1) (2010) 41–56.
[8] P. Bose, S. Collette, F. Hurtado, M. Korman, S. Langerman, V. Sacristan, M. Saumell, Some properties of k-Delaunay and k-Gabriel graphs, Comput. Geom.
46 (2) (2013) 131–139.
[9] M.-S. Chang, C.Y. Tang, R.C.T. Lee, 20-relative neighborhood graphs are Hamiltonian, J. Graph Theory 15 (5) (1991) 543–557.
[10] M.-S. Chang, C.Y. Tang, R.C.T. Lee, Solving the Euclidean bottleneck biconnected edge subgraph problem by 2-relative neighborhood graphs, Discrete
Appl. Math. 39 (1) (1992) 1–12.
[11] M.-S. Chang, C.Y. Tang, R.C.T. Lee, Solving the Euclidean bottleneck matching problem by k-relative neighborhood graphs, Algorithmica 8 (3) (1992)
177–194.
[12] P. Chew, There are planar graphs almost as good as the complete graph, J. Comput. Syst. Sci. 39 (2) (1989) 205–219.
[13] M.B. Dillencourt, A non-Hamiltonian, nondegenerate Delaunay triangulation, Inf. Process. Lett. 25 (3) (1987) 149–151.
[14] M.B. Dillencourt, Toughness and Delaunay triangulations, Discrete Comput. Geom. 5 (1990) 575–601.
[15] H.N. Gabow, R.E. Tarjan, Algorithms for two bottleneck optimization problems, J. Algorithms 9 (3) (1988) 411–417.
[16] T. Kaiser, M. Saumell, N.V. Cleemput, 10-Gabriel graphs are Hamiltonian, Inf. Process. Lett. 115 (11) (2015) 877–881.
[17] T. Lukovszki, New results of fault tolerant geometric spanners, in: WADS, 1999, pp. 193–204.
[18] W.T. Tutte, The factorization of linear graphs, J. Lond. Math. Soc. 22 (2) (1947) 107–111.

